{"version":3,"sources":["app/modules/UserManagement/AddUser/AddUserModule.styles.js","app/components/FormSelect/FormSelect.jsx","app/__mocks__/userManagementMock.js","app/modules/UserManagement/AddUser/AddUserModule.jsx","app/mediators/ModuleMediators/AddUserMediator/AddUserMediator.js","app/components/Layout/ModuleFragment/ModuleFragment.style.js","app/components/Layout/ModuleFragment/ModuleFragment.jsx","app/components/sort/Paragraphs.jsx","app/components/sort/Fragments.jsx","app/components/InputField/InputField.jsx"],"names":["AddUserForm","styled","form","withConfig","displayName","componentId","DropDown","Box","DropDownLabel","Text","SubmitButton","ZoomButton","Message","props","theme","color","CustomSelect","Select","font","zoomFontFamOne","aidsFondsRed","DropDownItem","div","FormSelect","react_default","a","createElement","closeOnChange","multiple","placeholder","placeHolder","children","item","CheckBox","key","checked","arraySelected","indexOf","value","label","onChange","selectVal","options","data","plain","valueSelected","defaultProps","userManagementMockData","roleOptions","orgOptions","AddUserModule","disableSubmit","firstName","lastName","email","orgSelected","_id","roleSelected","ModuleFragment","title","onSubmit","submitForm","InputField","id","name","required","validate","regexp","changeFirstName","changeLastName","type","changeEmail","direction","components_FormSelect_FormSelect","changeUserRole","changeOrganisation","react_tippy","trigger","position","disabled","html","SimpleToolTip","success","errorMessage","secondaryInfoMessage","AddUserMediator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userRole","organisation","userGroups","userRoles","bind","assertThisInitialized","auth0Client","getUserGroups","getUserRoles","e","setState","target","option","preventDefault","addUser","AddUser_AddUserModule","React","Component","FragmentInfoButton","aidsFondsWhite","FragmentInfo","zoomFontFamTwo","showFragmentInfo","_this2","Fragments","background","description","showInfoButton","data-cy","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","elevation","fragmentInfo","__webpack_require__","d","__webpack_exports__","DescriptionParagraph","BaseParagraph","DescriptionParagraphBold","PageIntroInitial","PageIntroSecondary","theme_Theme__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_1__","zoomBlack","p","zoomGreyTwo","FragmentContainer","FragmentContent","FragmentHeader","FragmentDescription","FragmentVisualisation","grommet__WEBPACK_IMPORTED_MODULE_0__","theme_Theme__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","components_sort_Paragraphs__WEBPACK_IMPORTED_MODULE_3__","components_sort_Headings__WEBPACK_IMPORTED_MODULE_4__","FragmentParagraph","SectionHeading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","grommet__WEBPACK_IMPORTED_MODULE_2__","grommet__WEBPACK_IMPORTED_MODULE_3__","Label","span","htmlFor"],"mappings":"uMAKaA,EAAcC,UAAOC,KAAVC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,YAAGJ,CAAH,gCAKXK,EAAWL,kBAAOM,KAAVJ,WAAA,CAAAC,YAAA,gCAAAC,YAAA,YAAGJ,CAAH,wBAIRO,EAAgBP,kBAAOQ,KAAVN,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,qEAObS,EAAeT,kBAAOU,KAAVR,WAAA,CAAAC,YAAA,oCAAAC,YAAA,YAAGJ,CAAH,sBAIZW,EAAUX,kBAAOM,KAAVJ,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,8CACT,SAAAY,GAAK,OAAIA,EAAMC,MAAMC,qDChB1BC,EAAef,kBAAOgB,KAAVd,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAGJ,CAAH,wGACDa,IAAMI,KAAKC,eAGjBL,IAAMC,MAAMK,aAEVN,IAAMC,MAAMK,cAInBC,EAAepB,UAAOqB,IAAVnB,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAGJ,CAAH,kBAuBZsB,EAAa,SAAAV,GAcjB,OACEW,EAAAC,EAAAC,cAACnB,EAAA,EAAD,KACEiB,EAAAC,EAAAC,cAACV,EAAD,CACEW,eAAgBd,EAAMe,SACtBA,SAAUf,EAAMe,SAChBC,YAAahB,EAAMiB,YACnBC,SAnBe,SAAAC,GACnB,OAAInB,EAAMe,SAENJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,IAAKF,EACLG,SAAsD,IAA7CtB,EAAMuB,cAAcC,QAAQL,EAAKM,OAC1CC,MAAOP,EAAKO,MACZC,SAAU,kBAAM3B,EAAM4B,UAAUT,MAG/BR,EAAAC,EAAAC,cAACL,EAAD,KAAeW,EAAKO,QAUvBG,QAAS7B,EAAM8B,KACfC,OAAK,EACLN,MAAOzB,EAAMgC,cACbL,SAAU3B,EAAMe,SAAW,KAAOf,EAAM4B,cAOhDlB,EAAWuB,aAtCU,CACnBH,KAAM,CAAC,CAAEJ,MAAO,GAAID,MAAO,KAC3BR,YAAa,GACbW,UAAW,KACXI,cAAe,IAoCFtB,6mBC5EFwB,EAAyB,CACpCC,YAAa,CACX,CAAET,MAAO,eAAgBD,MAAO,WAChC,CAAEC,MAAO,YAAaD,MAAO,aAC7B,CAAEC,MAAO,gBAAiBD,MAAO,kBAEnCW,WAAY,CACV,CAAEV,MAAO,YAAaD,MAAO,aAC7B,CAAEC,MAAO,SAAUD,MAAO,UAC1B,CAAEC,MAAO,KAAMD,MAAO,QCiEpBY,EAAgB,SAAArC,GACpB,IAAMsC,EACgB,KAApBtC,EAAMuC,WACa,KAAnBvC,EAAMwC,UACU,KAAhBxC,EAAMyC,OACoB,KAA1BzC,EAAM0C,YAAYC,KACS,KAA3B3C,EAAM4C,aAAaD,IACrB,OACEhC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAgBC,MAAM,YACpBnC,EAAAC,EAAAC,cAAC1B,EAAD,CAAa4D,SAAU/C,EAAMgD,YAC3BrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEvB,MAAM,aACNwB,GAAG,kBACHC,KAAK,YACLC,UAAQ,EACRC,SAAU,CAAEC,OAAQ,WACpB7B,MAAOzB,EAAMuC,UACbZ,SAAU3B,EAAMuD,kBAGlB5C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEvB,MAAM,YACNwB,GAAG,iBACHC,KAAK,WACLC,UAAQ,EACRC,SAAU,CAAEC,OAAQ,WACpB7B,MAAOzB,EAAMwC,SACbb,SAAU3B,EAAMwD,iBAGlB7C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEvB,MAAM,QACNwB,GAAG,cACHC,KAAK,QACLC,UAAQ,EACRK,KAAK,QACLhC,MAAOzB,EAAMyC,MACbd,SAAU3B,EAAM0D,cAGlB/C,EAAAC,EAAAC,cAACnB,EAAA,EAAD,CAAKiE,UAAU,kBACbhD,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAAClB,EAAD,kBACAgB,EAAAC,EAAAC,cAAC+C,EAAD,CACE9B,KAAM9B,EAAMmC,YACZlB,YAAY,GACZW,UAAW5B,EAAM6D,eACjB7B,cAAehC,EAAM4C,aAAalB,SAGtCf,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAAClB,EAAD,qBACAgB,EAAAC,EAAAC,cAAC+C,EAAD,CACE9B,KAAM9B,EAAMoC,WACZnB,YAAY,GACZW,UAAW5B,EAAM8D,mBACjB9B,cAAehC,EAAM0C,YAAYhB,UAKvCf,EAAAC,EAAAC,cAACkD,EAAA,QAAD,CACEC,QAAQ,aACRC,SAAS,eACTC,UAAW5B,EACX6B,KAAMxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAetB,MAAM,iCAE3BnC,EAAAC,EAAAC,cAAChB,EAAD,CAAc4D,KAAK,SAASS,SAAU5B,GAAtC,oBAKDtC,EAAMqE,SACL1D,EAAAC,EAAAC,cAACd,EAAD,CAASE,MAAO,CAAEC,MAAO,UAAzB,mDAIAF,EAAMqE,SAAWrE,EAAMsE,cACvB3D,EAAAC,EAAAC,cAACd,EAAD,CAASE,MAAO,CAAEC,MAAOD,IAAMC,MAAMK,eAClCP,EAAMsE,cAGVtE,EAAMuE,sBACL5D,EAAAC,EAAAC,cAACd,EAAD,CAASE,MAAO,CAAEC,MAAO,WACtBF,EAAMuE,yBASnBlC,EAAcJ,aAhHO,CACnBQ,MAAO,GACP4B,SAAS,EACTE,qBAAsB,KACtBD,aAAc,KACd9B,SAAU,GACVD,UAAW,GACXmB,YAAa,KACbF,eAAgB,KAChBD,gBAAiB,KACjBP,WAAY,KACZJ,aAAc,CAAElB,MAAO,GAAID,MAAO,GAAIkB,IAAK,IAC3CkB,eAAgB,KAChBnB,YAAa,CAAEhB,MAAO,GAAID,MAAO,GAAIkB,IAAK,IAC1CmB,mBAAoB,KACpB3B,YAAaD,EAAuBC,YACpCC,WAAYF,EAAuBE,YAkGtBC,koECnKTmC,cACJ,SAAAA,EAAYxE,GAAO,IAAAyE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM5E,KAEDgF,MAAQ,CACXX,SAAS,EACTC,aAAc,KACdC,qBAAsB,KACtB9B,MAAO,GACPD,SAAU,GACVD,UAAW,GACX0C,SAAU,CAAEvD,MAAO,GAAID,MAAO,GAAIkB,IAAK,IACvCuC,aAAc,CAAExD,MAAO,GAAID,MAAO,GAAIkB,IAAK,IAC3CwC,WAAY,GACZC,UAAW,IAGbX,EAAKzB,WAAayB,EAAKzB,WAAWqC,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAClBA,EAAKf,YAAce,EAAKf,YAAY2B,KAAjBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACnBA,EAAKjB,eAAiBiB,EAAKjB,eAAe6B,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACtBA,EAAKZ,eAAiBY,EAAKZ,eAAewB,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACtBA,EAAKlB,gBAAkBkB,EAAKlB,gBAAgB8B,KAArBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACvBA,EAAKX,mBAAqBW,EAAKX,mBAAmBuB,KAAxBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KArBTA,mFAyBjBG,KAAK5E,MAAMuF,YAAYC,cAAcZ,MACrCA,KAAK5E,MAAMuF,YAAYE,aAAab,8CAGtBc,GACdd,KAAKe,SAAS,CACZpD,UAAWmD,EAAEE,OAAOnE,+CAITiE,GACbd,KAAKe,SAAS,CACZnD,SAAUkD,EAAEE,OAAOnE,4CAIXiE,GACVd,KAAKe,SAAS,CACZlD,MAAOiD,EAAEE,OAAOnE,+CAILiE,GACbd,KAAKe,SAAS,CACZV,SAAUS,EAAEG,oDAIGH,GACjBd,KAAKe,SAAS,CACZT,aAAcQ,EAAEG,4CAITH,GACTA,EAAEI,iBACFlB,KAAK5E,MAAMuF,YAAYQ,QACrBnB,KAAKI,MAAMzC,UACXqC,KAAKI,MAAMxC,SACXoC,KAAKI,MAAMvC,MACXmC,KAAKI,MAAME,aAAavC,IACxBiC,KAAKI,MAAMC,SAAStC,IACpBiC,uCAKF,OACEjE,EAAAC,EAAAC,cAACmF,EAAD,CACEvD,MAAOmC,KAAKI,MAAMvC,MAClB4B,QAASO,KAAKI,MAAMX,QACpBE,qBAAsBK,KAAKI,MAAMT,qBACjCD,aAAcM,KAAKI,MAAMV,aACzB9B,SAAUoC,KAAKI,MAAMxC,SACrBD,UAAWqC,KAAKI,MAAMzC,UACtB0C,SAAUL,KAAKI,MAAMC,SACrBC,aAAcN,KAAKI,MAAME,aACzBxB,YAAakB,KAAKlB,YAClBF,eAAgBoB,KAAKpB,eACrBD,gBAAiBqB,KAAKrB,gBACtBP,WAAY4B,KAAK5B,WACjBJ,aAAcgC,KAAKI,MAAMC,SACzBpB,eAAgBe,KAAKf,eACrBnB,YAAakC,KAAKI,MAAME,aACxBpB,mBAAoBc,KAAKd,mBACzB1B,WAAYwC,KAAKI,MAAMG,WACvBhD,YAAayC,KAAKI,MAAMI,mBA5FFa,IAAMC,WAkGrB1B,mxBCpGF2B,EAAqB/G,UAAOqB,IAAVnB,WAAA,CAAAC,YAAA,0CAAAC,YAAA,YAAGJ,CAAH,+SAITa,IAAMC,MAAMK,aAiBrBN,IAAMC,MAAMkG,eACNnG,IAAMC,MAAMI,gBAKlB+F,EAAejH,kBAAOM,KAAVJ,WAAA,CAAAC,YAAA,oCAAAC,YAAA,YAAGJ,CAAH,sIASRa,IAAMI,KAAKiG,gBCftBzD,4PACI,CACN0D,kBAAkB,sFAIlB3B,KAAKe,SAAS,CAAEY,kBAAkB,+CAIlC3B,KAAKe,SAAS,CAAEY,kBAAkB,qCAG3B,IAAAC,EAAA5B,KACP,OACEjE,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAmBC,WAAY9B,KAAK5E,MAAM0G,YACxC/F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACG7B,KAAK5E,MAAM8C,OACVnC,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KAAiB7B,KAAK5E,MAAM8C,OAG7B8B,KAAK5E,MAAM2G,aACVhG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KAAsB7B,KAAK5E,MAAM2G,aAGlC/B,KAAK5E,MAAM4G,gBACVjG,EAAAC,EAAAC,cAACsF,EAAD,CACEU,UAAQ,wBACRC,aAAc,kBAAMN,EAAKO,oBACzBC,aAAc,kBAAMR,EAAKS,sBAI5BrC,KAAKI,MAAMuB,kBACV5F,EAAAC,EAAAC,cAACwF,EAAD,CAAca,UAAU,UACrBtC,KAAK5E,MAAMmH,cAIhBxG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KAAwB7B,KAAK5E,MAAMkB,mBAvChB+E,IAAMC,WA+CnCrD,EAAeZ,aApDM,CACnBkF,aAAc,oDACdP,gBAAgB,GAoDH/D,+xBC1EfuE,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAA,IAAAC,EAAAR,EAAA,GAAAS,EAAAT,EAAA,GAGaG,EAAuBnI,UAAOqB,IAAVnB,WAAA,CAAAC,YAAA,mCAAAC,YAAA,eAAGJ,CAAH,uKAEtBa,IAAMC,MAAM4H,UACN7H,IAAMI,KAAKiG,gBAQfkB,EAAgBpI,UAAO2I,EAAVzI,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAGJ,CAAH,mIACfa,IAAMC,MAAM8H,aAQVP,EAA2BrI,kBAAOmI,GAAVjI,WAAA,CAAAC,YAAA,uCAAAC,YAAA,eAAGJ,CAAH,sBAIxBsI,EAAmBtI,kBAAOoI,GAAVlI,WAAA,CAAAC,YAAA,+BAAAC,YAAA,eAAGJ,CAAH,iEAGZa,IAAMI,KAAKC,gBAIfqH,EAAqBvI,kBAAOoI,GAAVlI,WAAA,CAAAC,YAAA,iCAAAC,YAAA,eAAGJ,CAAH,oCAEda,IAAMI,KAAKiG,kDCpC5Bc,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAAf,EAAAC,EAAAC,EAAA,sBAAAc,IAAAhB,EAAAC,EAAAC,EAAA,sBAAAe,IAAA,IAAAC,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAA,GAAAoB,EAAApB,EAAA,GAAAqB,EAAArB,EAAA,KAAAsB,EAAAtB,EAAA,IAQauB,EAAoBvJ,kBAAOoI,KAAVlI,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,kCACba,IAAMI,KAAKiG,gBAIf2B,EAAoB7I,kBAAOM,KAAVJ,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,0FAQjB8I,EAAkB9I,kBAAOM,KAAVJ,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,0FAfQ,UAuBvB+I,EAAiB/I,kBAAOwJ,KAAVtJ,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,sCAIdgJ,EAAsBhJ,kBAAOuJ,GAAVrJ,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,4CAInBiJ,EAAwBjJ,kBAAOM,KAAVJ,WAAA,CAAAC,YAAA,mCAAAC,YAAA,gBAAGJ,CAAH,0EAIjBa,IAAMI,KAAKiG,kDCzC5B,IAAAuC,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAA2B,EAAAF,GAAAhB,EAAAT,EAAA,GAAA4B,EAAA5B,EAAA,MAAA6B,EAAA7B,EAAA,KAQM8B,EAAQ9J,UAAO+J,KAAV7J,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,wBA8BL6D,EAAa,SAAAjD,GACjB,OACE8I,EAAAlI,EAAAC,cAACmI,EAAA,EAAD,CACEtH,MAAOoH,EAAAlI,EAAAC,cAACqI,EAAD,KAAQlJ,EAAM0B,OACrB0H,QAASpJ,EAAMkD,GACfC,KAAMnD,EAAMmD,KACZC,SAAUpD,EAAMoD,SAChBC,SAAUrD,EAAMqD,UAEhByF,EAAAlI,EAAAC,cAACoI,EAAA,EAAD,CACE/F,GAAIlD,EAAMkD,GACVzB,MAAOzB,EAAMyB,MACbE,SAAU3B,EAAM2B,SAChB8B,KAAMzD,EAAMyD,SAOpBR,EAAWhB,aAjCU,CACnBP,MAAO,GACPwB,GAAI,GACJC,KAAM,GACNC,UAAU,EACVK,KAAM,OACNJ,SAAU,CACRC,OAAQ,WAEV7B,MAAO,GACPE,SAAU,MAyBGsB","file":"static/js/11.b908464f.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Box, Text, Form } from 'grommet';\n\nimport ZoomButton from 'components/ZoomButton/ZoomButton';\n\nexport const AddUserForm = styled.form`\n  padding: 0 40px;\n  width: 100%;\n`;\n\nexport const DropDown = styled(Box)`\n  margin-right: 40px;\n`;\n\nexport const DropDownLabel = styled(Text)`\n  color: #9b9b9b;\n  font-size: 15px;\n  margin-bottom: 5px;\n  margin-top: 10px;\n`;\n\nexport const SubmitButton = styled(ZoomButton)`\n  margin-top: 40px;\n`;\n\nexport const Message = styled(Box)`\n  color: ${props => props.theme.color};\n  font-size: 20px;\n  margin-top: 40px;\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n/* components */\nimport { Select, CheckBox, Box } from 'grommet';\n\nimport theme from 'theme/Theme';\n\nconst CustomSelect = styled(Select)`\n  font-family: ${theme.font.zoomFontFamOne};\n  font-weight: normal;\n  font-size: 14px;\n  color: ${theme.color.aidsFondsRed};\n  ::-webkit-input-placeholder {\n    color: ${theme.color.aidsFondsRed};\n  }\n`;\n\nconst DropDownItem = styled.div`\n  padding: 5px;\n`;\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string,\n    }),\n  ),\n  placeHolder: PropTypes.string,\n  selectVal: PropTypes.func,\n  valueSelected: PropTypes.string,\n};\n\nconst defaultProps = {\n  data: [{ label: '', value: '' }],\n  placeHolder: '',\n  selectVal: null,\n  valueSelected: '',\n};\n\nconst FormSelect = props => {\n  const dropDownItem = item => {\n    if (props.multiple)\n      return (\n        <CheckBox\n          key={item}\n          checked={props.arraySelected.indexOf(item.value) !== -1}\n          label={item.label}\n          onChange={() => props.selectVal(item)}\n        />\n      );\n    return <DropDownItem>{item.label}</DropDownItem>;\n  };\n\n  return (\n    <Box>\n      <CustomSelect\n        closeOnChange={!props.multiple}\n        multiple={props.multiple}\n        placeholder={props.placeHolder}\n        children={dropDownItem}\n        options={props.data}\n        plain\n        value={props.valueSelected}\n        onChange={props.multiple ? null : props.selectVal}\n      />\n    </Box>\n  );\n};\n\nFormSelect.propTypes = propTypes;\nFormSelect.defaultProps = defaultProps;\n\nexport default FormSelect;\n","export const userManagementMockData = {\n  roleOptions: [\n    { label: 'Regular user', value: 'regular' },\n    { label: 'Moderator', value: 'moderator' },\n    { label: 'Administrator', value: 'administrator' },\n  ],\n  orgOptions: [\n    { label: 'Aidsfonds', value: 'aidsfonds' },\n    { label: 'UNESCO', value: 'unesco' },\n    { label: 'ZZ', value: 'zz' },\n  ],\n};\n\nexport { userManagementMockData as default };\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/* components */\nimport {\n  AddUserForm,\n  DropDown,\n  DropDownLabel,\n  Message,\n  SubmitButton,\n} from 'modules/UserManagement/AddUser/AddUserModule.styles';\n\nimport ModuleFragment from 'components/Layout/ModuleFragment/ModuleFragment';\nimport InputField from 'components/InputField/InputField';\nimport FormSelect from 'components/FormSelect/FormSelect';\nimport SimpleToolTip from 'components/ToolTips/SimpleToolTip/SimpleToolTip';\nimport { Tooltip } from 'react-tippy';\nimport userManagementMockData from '__mocks__/userManagementMock';\nimport { Box } from 'grommet';\nimport theme from 'theme/Theme';\n\nconst propTypes = {\n  email: PropTypes.string,\n  success: PropTypes.bool,\n  secondaryInfoMessage: PropTypes.string,\n  errorMessage: PropTypes.string,\n  lastName: PropTypes.string,\n  firstName: PropTypes.string,\n  changeEmail: PropTypes.func,\n  changeLastName: PropTypes.func,\n  changeFirstName: PropTypes.func,\n  submitForm: PropTypes.func,\n  roleSelected: PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.string,\n  }),\n  orgSelected: PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.string,\n  }),\n  changeUserRole: PropTypes.func,\n  changeOrganisation: PropTypes.func,\n  orgOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string,\n    }),\n  ),\n  roleOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string,\n    }),\n  ),\n};\nconst defaultProps = {\n  email: '',\n  success: false,\n  secondaryInfoMessage: null,\n  errorMessage: null,\n  lastName: '',\n  firstName: '',\n  changeEmail: null,\n  changeLastName: null,\n  changeFirstName: null,\n  submitForm: null,\n  roleSelected: { label: '', value: '', _id: '' },\n  changeUserRole: null,\n  orgSelected: { label: '', value: '', _id: '' },\n  changeOrganisation: null,\n  roleOptions: userManagementMockData.roleOptions,\n  orgOptions: userManagementMockData.orgOptions,\n};\n\nconst AddUserModule = props => {\n  const disableSubmit =\n    props.firstName === '' ||\n    props.lastName === '' ||\n    props.email === '' ||\n    props.orgSelected._id === '' ||\n    props.roleSelected._id === '';\n  return (\n    <ModuleFragment title=\"Add user\">\n      <AddUserForm onSubmit={props.submitForm}>\n        <InputField\n          label=\"First name\"\n          id=\"firstName-input\"\n          name=\"firstName\"\n          required\n          validate={{ regexp: /^[a-z]/i }}\n          value={props.firstName}\n          onChange={props.changeFirstName}\n        />\n\n        <InputField\n          label=\"Last name\"\n          id=\"lastName-input\"\n          name=\"lastName\"\n          required\n          validate={{ regexp: /^[a-z]/i }}\n          value={props.lastName}\n          onChange={props.changeLastName}\n        />\n\n        <InputField\n          label=\"Email\"\n          id=\"email-input\"\n          name=\"email\"\n          required\n          type=\"email\"\n          value={props.email}\n          onChange={props.changeEmail}\n        />\n\n        <Box direction=\"row-responsive\">\n          <DropDown>\n            <DropDownLabel>User role</DropDownLabel>\n            <FormSelect\n              data={props.roleOptions}\n              placeHolder=\"\"\n              selectVal={props.changeUserRole}\n              valueSelected={props.roleSelected.label}\n            />\n          </DropDown>\n          <DropDown>\n            <DropDownLabel>Organisation</DropDownLabel>\n            <FormSelect\n              data={props.orgOptions}\n              placeHolder=\"\"\n              selectVal={props.changeOrganisation}\n              valueSelected={props.orgSelected.label}\n            />\n          </DropDown>\n        </Box>\n\n        <Tooltip\n          trigger=\"mouseenter\"\n          position=\"bottom-start\"\n          disabled={!disableSubmit}\n          html={<SimpleToolTip title=\"All the fields are required\" />}\n        >\n          <SubmitButton type=\"submit\" disabled={disableSubmit}>\n            send invitation\n          </SubmitButton>\n        </Tooltip>\n\n        {props.success && (\n          <Message theme={{ color: 'green' }}>\n            User created and invitation sent successfully.\n          </Message>\n        )}\n        {!props.success && props.errorMessage && (\n          <Message theme={{ color: theme.color.aidsFondsRed }}>\n            {props.errorMessage}\n          </Message>\n        )}\n        {props.secondaryInfoMessage && (\n          <Message theme={{ color: 'orange' }}>\n            {props.secondaryInfoMessage}\n          </Message>\n        )}\n      </AddUserForm>\n    </ModuleFragment>\n  );\n};\n\nAddUserModule.propTypes = propTypes;\nAddUserModule.defaultProps = defaultProps;\n\nexport default AddUserModule;\n","/* base */\nimport React from 'react';\n\n/* components */\nimport AddUserModule from 'modules/UserManagement/AddUser/AddUserModule';\n\nclass AddUserMediator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      success: false,\n      errorMessage: null,\n      secondaryInfoMessage: null,\n      email: '',\n      lastName: '',\n      firstName: '',\n      userRole: { label: '', value: '', _id: '' },\n      organisation: { label: '', value: '', _id: '' },\n      userGroups: [],\n      userRoles: [],\n    };\n\n    this.submitForm = this.submitForm.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.changeLastName = this.changeLastName.bind(this);\n    this.changeUserRole = this.changeUserRole.bind(this);\n    this.changeFirstName = this.changeFirstName.bind(this);\n    this.changeOrganisation = this.changeOrganisation.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.auth0Client.getUserGroups(this);\n    this.props.auth0Client.getUserRoles(this);\n  }\n\n  changeFirstName(e) {\n    this.setState({\n      firstName: e.target.value,\n    });\n  }\n\n  changeLastName(e) {\n    this.setState({\n      lastName: e.target.value,\n    });\n  }\n\n  changeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  changeUserRole(e) {\n    this.setState({\n      userRole: e.option,\n    });\n  }\n\n  changeOrganisation(e) {\n    this.setState({\n      organisation: e.option,\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    this.props.auth0Client.addUser(\n      this.state.firstName,\n      this.state.lastName,\n      this.state.email,\n      this.state.organisation._id,\n      this.state.userRole._id,\n      this,\n    );\n  }\n\n  render() {\n    return (\n      <AddUserModule\n        email={this.state.email}\n        success={this.state.success}\n        secondaryInfoMessage={this.state.secondaryInfoMessage}\n        errorMessage={this.state.errorMessage}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        userRole={this.state.userRole}\n        organisation={this.state.organisation}\n        changeEmail={this.changeEmail}\n        changeLastName={this.changeLastName}\n        changeFirstName={this.changeFirstName}\n        submitForm={this.submitForm}\n        roleSelected={this.state.userRole}\n        changeUserRole={this.changeUserRole}\n        orgSelected={this.state.organisation}\n        changeOrganisation={this.changeOrganisation}\n        orgOptions={this.state.userGroups}\n        roleOptions={this.state.userRoles}\n      />\n    );\n  }\n}\n\nexport default AddUserMediator;\n","import styled from 'styled-components';\nimport theme from 'theme/Theme';\nimport { Box } from 'grommet';\n\nexport const FragmentInfoButton = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: ${theme.color.aidsFondsRed};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n  position: absolute;\n  right: 0;\n  top: 0;\n\n  &:hover {\n    background-color: darkgrey;\n  }\n\n  &:after {\n    content: 'i';\n    font-size: 13px;\n    text-align: center;\n    color: ${theme.color.aidsFondsWhite};\n    font-family: ${theme.color.zoomFontFamOne};\n    user-select: none;\n  }\n`;\n\nexport const FragmentInfo = styled(Box)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 250px;\n  background-color: white;\n  padding: 20px;\n  z-index: 2;\n  border-radius: 2%;\n  font-family: ${theme.font.zoomFontFamTwo};\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FragmentContainer,\n  FragmentContent,\n  FragmentDescription,\n  FragmentHeader,\n  FragmentVisualisation,\n} from 'components/sort/Fragments';\nimport { FragmentInfo, FragmentInfoButton } from './ModuleFragment.style';\n\nconst propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  description: PropTypes.string,\n  background: PropTypes.string,\n  fragmentInfo: PropTypes.string,\n  children: PropTypes.any,\n  showInfoButton: PropTypes.bool,\n};\nconst defaultProps = {\n  fragmentInfo: 'Lorem ipsum dolor simet empty module description.',\n  showInfoButton: false,\n};\n\nclass ModuleFragment extends React.Component {\n  state = {\n    showFragmentInfo: false,\n  };\n\n  handleMouseEnter() {\n    this.setState({ showFragmentInfo: true });\n  }\n\n  handleMouseLeave() {\n    this.setState({ showFragmentInfo: false });\n  }\n\n  render() {\n    return (\n      <FragmentContainer background={this.props.background}>\n        <FragmentContent>\n          {this.props.title && (\n            <FragmentHeader>{this.props.title}</FragmentHeader>\n          )}\n\n          {this.props.description && (\n            <FragmentDescription>{this.props.description}</FragmentDescription>\n          )}\n\n          {this.props.showInfoButton && (\n            <FragmentInfoButton\n              data-cy=\"tooltip-fragment-info\"\n              onMouseEnter={() => this.handleMouseEnter()}\n              onMouseLeave={() => this.handleMouseLeave()}\n            />\n          )}\n\n          {this.state.showFragmentInfo && (\n            <FragmentInfo elevation=\"medium\">\n              {this.props.fragmentInfo}\n            </FragmentInfo>\n          )}\n\n          <FragmentVisualisation>{this.props.children}</FragmentVisualisation>\n        </FragmentContent>\n      </FragmentContainer>\n    );\n  }\n}\n\nModuleFragment.propTypes = propTypes;\nModuleFragment.defaultProps = defaultProps;\n\nexport default ModuleFragment;\n","import theme from 'theme/Theme';\nimport styled from 'styled-components';\n\nexport const DescriptionParagraph = styled.div`\n  text-align: justify;\n  color: ${theme.color.zoomBlack};\n  font-family: ${theme.font.zoomFontFamTwo};\n  font-weight: 300;\n  line-height: 33px;\n  font-size: 18px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`;\n\nexport const BaseParagraph = styled.p`\n  color: ${theme.color.zoomGreyTwo};\n  font-weight: 300;\n  line-height: 1.5;\n  font-size: 20px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`;\n\nexport const DescriptionParagraphBold = styled(DescriptionParagraph)`\n  font-weight: 700;\n`;\n\nexport const PageIntroInitial = styled(BaseParagraph)`\n  font-size: 20px;\n  font-weight: 400;\n  font-family: ${theme.font.zoomFontFamOne};\n  margin-top: 0;\n`;\n\nexport const PageIntroSecondary = styled(BaseParagraph)`\n  font-size: 20px;\n  font-family: ${theme.font.zoomFontFamTwo};\n`;\n","import { Box, Button, DataTable, Text } from 'grommet';\nimport theme from 'theme/Theme';\nimport styled from 'styled-components';\nimport { BaseParagraph } from 'components/sort/Paragraphs';\nimport { SectionHeading } from 'components/sort/Headings';\n\nexport const fragmentContentWidth = '1024px';\n\nexport const FragmentParagraph = styled(BaseParagraph)`\n  font-family: ${theme.font.zoomFontFamTwo};\n  margin-top: 0;\n`;\n\nexport const FragmentContainer = styled(Box)`\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  position: relative;\n`;\n\nexport const FragmentContent = styled(Box)`\n  width: 100%;\n  max-width: ${fragmentContentWidth};\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const FragmentHeader = styled(SectionHeading)`\n  margin-top: 0;\n  margin-bottom: 50px;\n`;\nexport const FragmentDescription = styled(FragmentParagraph)`\n  max-width: 900px;\n  align-self: flex-start;\n`;\nexport const FragmentVisualisation = styled(Box)`\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-family: ${theme.font.zoomFontFamTwo};\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n/* components */\nimport { FormField, TextInput } from 'grommet';\n\nconst Label = styled.span`\n  margin-left: -12px;\n`;\n\nconst propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n  validate: PropTypes.shape({\n    regexp: PropTypes.instanceOf(RegExp),\n  }),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n  label: '',\n  id: '',\n  name: '',\n  required: false,\n  type: 'text',\n  validate: {\n    regexp: /^[a-z]/i,\n  },\n  value: '',\n  onChange: null,\n};\n\nconst InputField = props => {\n  return (\n    <FormField\n      label={<Label>{props.label}</Label>}\n      htmlFor={props.id}\n      name={props.name}\n      required={props.required}\n      validate={props.validate}\n    >\n      <TextInput\n        id={props.id}\n        value={props.value}\n        onChange={props.onChange}\n        type={props.type}\n      />\n    </FormField>\n  );\n};\n\nInputField.propTypes = propTypes;\nInputField.defaultProps = defaultProps;\n\nexport default InputField;\n"],"sourceRoot":""}