{"version":3,"sources":["app/components/charts/treemap/TreeMapHtmlNode/TreeMapHtmlNode.styles.js","app/components/charts/treemap/TreeMapHtmlNode/TreeMapHtmlNode.jsx","app/components/charts/treemap/TreeMap.styles.js","app/components/charts/treemap/TreeMap.jsx","app/modules/IATI_Detail/fragments/Sectors/Sectors.jsx","app/modules/IATI_Detail/fragments/TotalBudget/TotalBudget.jsx","app/modules/IATI_Detail/fragments/Header/Header.styles.js","app/modules/IATI_Detail/fragments/Header/Header.jsx","app/modules/IATI_Detail/IatiDetail.jsx","app/mediators/ModuleMediators/IatiDetailMediator/IatiDetailMediator.mock.js","app/mediators/ModuleMediators/IatiDetailMediator/IatiDetailMediator.utils.js","app/mediators/ModuleMediators/IatiDetailMediator/IatiDetailMediator.js","app/components/Layout/ModuleFragment/ModuleFragment.style.js","app/components/Layout/ModuleFragment/ModuleFragment.jsx","app/components/sort/Paragraphs.jsx","app/components/sort/Fragments.jsx","app/components/charts/barcharts/vertical/BarChartVertical.styles.js","app/components/charts/barcharts/vertical/BarChartVertical.jsx"],"names":["TextContainer","styled","div","withConfig","displayName","componentId","NodeLabel","span","theme","font","zoomFontFamOne","NodeValue","TreeNodeBase","TreeMapHtmlNode","_ref","node","style","width","height","react_default","a","createElement","id","data","replace","top","y","left","x","background","color","borderWidth","borderColor","label","fontSize","value","defaultProps","ComponentBase","Box","TreeMap","props","treemap","root","identity","innerPadding","outerPadding","tile","nodeComponent","treemap_TreeMapHtmlNode_TreeMapHtmlNode","margin","right","bottom","colorBy","e","animate","Sectors","ModuleFragment","zoomGreyZero","title","showInfoButton","children","treemap_TreeMap","Title","TotalBudget","totalBudget","toLocaleString","minimumFractionDigits","maximumFractionDigits","BarChartVertical","keys","DetailList","ul","DetailListItem","li","ItemLabel","ItemInfo","zoomFontFamTwo","aidsFondsBlue","Tooltip","aidsFondsWhite","Header","showMoreData","this","setState","_this2","Fragment","get","map","item","key","info","Headings","onMouseEnter","moreData","handleMouseEnter","onMouseLeave","handleMouseLeave","state","join","React","Component","timeline","detail","IatiDetail","fragments_Header_Header","fragments_TotalBudget_TotalBudget","budgets","fragments_Sectors_Sectors","sectors","oipaParams","activityID","fields","convertISOToDate","date","DateTime","fromISO","toFormat","IatiDetailMediator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","activityData","dispatch","oipaActions","objectSpread","mock","prevProps","isEqual","find","activity_dates","d","type","code","concat","recipient_countries","length","country","name","undefined","b","year","period_end","substr","Budget","BudgetColor","chartColorTwo","Spent","aggregations","activity_children","expenditure_value","SpentColor","chartColorThree","sumBy","sector","loc","percentage","formatActivityData","IATI_Detail_IatiDetail","withRouter","connect","FragmentInfoButton","aidsFondsRed","FragmentInfo","showFragmentInfo","Fragments","description","data-cy","elevation","fragmentInfo","__webpack_require__","__webpack_exports__","DescriptionParagraph","BaseParagraph","DescriptionParagraphBold","PageIntroInitial","PageIntroSecondary","theme_Theme__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_1__","zoomBlack","p","zoomGreyTwo","FragmentContainer","FragmentContent","FragmentHeader","FragmentDescription","FragmentVisualisation","grommet__WEBPACK_IMPORTED_MODULE_0__","theme_Theme__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","components_sort_Paragraphs__WEBPACK_IMPORTED_MODULE_3__","components_sort_Headings__WEBPACK_IMPORTED_MODULE_4__","FragmentParagraph","SectionHeading","bar","indexBy","padding","groupMode","colors","t","defs","size","stagger","rotation","lineWidth","spacing","fill","match","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","format","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","motionStiffness","motionDamping","tooltipFormat","legends","disabledLegend","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on"],"mappings":"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","file":"static/js/12.cece0b50.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport theme from 'theme/Theme';\n/* todo: needs further tweaking from a design perspective and speccing from a business perspective */\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 100%;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nexport const NodeLabel = styled.span`\n  user-select: none;\n  width: 80%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-family: ${theme.font.zoomFontFamOne};\n  line-height: 1;\n`;\nexport const NodeValue = styled.span`\n  user-select: none;\n  font-family: ${theme.font.zoomFontFamOne};\n  line-height: 1;\n`;\n\nexport const WidthDefiner = styled.div`\n  width: 80%;\n`;\n\nexport const TreeNodeBase = styled.div`\n  box-sizing: border-box;\n  position: absolute;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-style: solid;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  TextContainer,\n  NodeLabel,\n  NodeValue,\n  TreeNodeBase,\n} from './TreeMapHtmlNode.styles';\n\nconst TreeMapHtmlNode = ({ node, style }) => {\n  if (style.width <= 0 || style.height <= 0) return null;\n\n  // const hideText = style.width <= 180;\n\n  return (\n    <TreeNodeBase\n      id={(node.data && node.data.id\n        ? node.data.id\n        : // replace special characters with \"-\"\n          node.id\n      ).replace(/[^\\w]/gi, '-')}\n      style={{\n        top: style.y,\n        left: style.x,\n        width: style.width,\n        height: style.height,\n        background: style.color,\n        borderWidth: style.borderWidth,\n        borderColor: style.borderColor,\n      }}\n    >\n      {/* {!hideText && ( */}\n      {node.label && (\n        <TextContainer>\n          <NodeLabel style={{ fontSize: style.width / 12 }}>\n            {node.label}\n          </NodeLabel>\n\n          <NodeValue style={{ fontSize: style.width / 9 }}>\n            {node.value}%\n          </NodeValue>\n        </TextContainer>\n      )}\n    </TreeNodeBase>\n  );\n};\n\nTreeMapHtmlNode.propTypes = {\n  node: PropTypes.shape({\n    color: PropTypes.string,\n    data: PropTypes.object,\n    depth: PropTypes.number,\n    height: PropTypes.number,\n    id: PropTypes.string,\n    label: PropTypes.string,\n    nodeHeight: PropTypes.number,\n    parent: PropTypes.object,\n    path: PropTypes.string,\n    width: PropTypes.number,\n    value: PropTypes.number,\n    x: PropTypes.number,\n    x0: PropTypes.number,\n    x1: PropTypes.number,\n    y: PropTypes.number,\n    y0: PropTypes.number,\n    y1: PropTypes.number,\n  }),\n  style: PropTypes.shape({\n    borderColor: PropTypes.string,\n    borderWidth: PropTypes.number,\n    color: PropTypes.string,\n    height: PropTypes.number,\n    labelTextColor: PropTypes.string,\n    orientLabel: PropTypes.bool,\n    width: PropTypes.number,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n};\nTreeMapHtmlNode.defaultProps = {\n  node: {},\n  style: {},\n};\n\nexport default TreeMapHtmlNode;\n","import styled from 'styled-components';\nimport { Box } from 'grommet';\n\nexport const ComponentBase = styled(Box)`\n  height: 400px;\n  width: 100%;\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveTreeMapHtml } from '@nivo/treemap';\nimport TreeMapHtmlNode from 'components/charts/treemap/TreeMapHtmlNode/TreeMapHtmlNode';\nimport { ComponentBase } from './TreeMap.styles';\n\nconst propTypes = {\n  data: PropTypes.shape({\n    children: PropTypes.arrayOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        loc: PropTypes.number,\n        name: PropTypes.string,\n      }),\n    ),\n    color: PropTypes.string,\n    name: PropTypes.string,\n  }),\n};\nconst defaultProps = {\n  data: {},\n};\n\nconst TreeMap = props => {\n  return (\n    <ComponentBase>\n      <ResponsiveTreeMapHtml\n        root={props.data}\n        identity=\"name\"\n        value=\"loc\"\n        innerPadding={2}\n        outerPadding={2}\n        tile=\"binary\"\n        nodeComponent={({ node, style }) => (\n          <TreeMapHtmlNode node={node} style={style} />\n        )}\n        margin={{\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n        }}\n        colorBy={e => {\n          return e.color;\n        }}\n        borderColor=\"inherit:darker(0.3)\"\n        animate={false}\n      />\n    </ComponentBase>\n  );\n};\n\nTreeMap.propTypes = propTypes;\nTreeMap.defaultProps = defaultProps;\n\nexport default TreeMap;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport theme from 'theme/Theme';\nimport TreeMap from 'components/charts/treemap/TreeMap';\nimport ModuleFragment from 'components/Layout/ModuleFragment/ModuleFragment';\n\nconst propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n    children: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        color: PropTypes.string,\n        loc: PropTypes.number,\n      }),\n    ),\n  }),\n};\nconst defaultProps = {\n  data: {},\n};\n\nconst Sectors = props => {\n  return (\n    <ModuleFragment\n      background={theme.color.zoomGreyZero}\n      title=\"Sectors\"\n      showInfoButton\n    >\n      {props.data.children && <TreeMap data={props.data} />}\n    </ModuleFragment>\n  );\n};\n\nSectors.propTypes = propTypes;\nSectors.defaultProps = defaultProps;\n\nexport default Sectors;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ModuleFragment from 'components/Layout/ModuleFragment/ModuleFragment';\nimport BarChartVertical from 'components/charts/barcharts/vertical/BarChartVertical';\n\nconst Title = styled.span`\n  width: 100%;\n  line-height: 40px;\n  text-align: center;\n`;\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      year: PropTypes.string,\n      Budget: PropTypes.number,\n      BudgetColor: PropTypes.string,\n      Spent: PropTypes.number,\n      SpentColor: PropTypes.string\n    })\n  ),\n  totalBudget: PropTypes.number\n};\nconst defaultProps = {\n  data: [],\n  totalBudget: 0\n};\n\nconst TotalBudget = props => (\n  <ModuleFragment\n    showInfoButton\n    title={\n      <Title>\n        Total budget\n        <br />$\n        {props.totalBudget.toLocaleString(\n          {},\n          {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2\n          }\n        )}\n      </Title>\n    }\n  >\n    <BarChartVertical data={props.data} keys={['Budget', 'Spent']} />\n  </ModuleFragment>\n);\n\nTotalBudget.propTypes = propTypes;\nTotalBudget.defaultProps = defaultProps;\n\nexport default TotalBudget;\n","import styled from 'styled-components';\nimport { Box } from 'grommet';\nimport theme from 'theme/Theme';\n\nexport const DetailList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nexport const DetailListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 25%;\n  margin-bottom: 30px;\n`;\n\nexport const ItemLabel = styled.div`\n  color: #000;\n  font-family: ${theme.font.zoomFontFamOne};\n  line-height: 1;\n  margin-bottom: 9px;\n`;\nexport const ItemInfo = styled.div`\n  font-family: ${theme.font.zoomFontFamTwo};\n  color: ${theme.color.aidsFondsBlue};\n  line-height: 1;\n  position: relative;\n`;\n\nexport const Tooltip = styled(Box)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 250px;\n  background-color: ${theme.color.aidsFondsWhite};\n  padding: 20px;\n  z-index: 2;\n  border-radius: 2%;\n  font-family: ${theme.font.zoomFontFamTwo};\n  line-height: 1.3;\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport ModuleFragment from 'components/Layout/ModuleFragment/ModuleFragment';\n\nimport { PageHeading } from 'components/sort/Headings';\nimport theme from 'theme/Theme';\nimport {\n  DetailList,\n  DetailListItem,\n  ItemInfo,\n  ItemLabel,\n  Tooltip,\n} from './Header.styles';\n\nconst propTypes = {\n  data: PropTypes.shape({\n    timeline: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        label: PropTypes.string,\n        info: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.arrayOf([PropTypes.string]),\n        ]),\n      }),\n    ),\n    title: PropTypes.string,\n    detail: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string,\n        info: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.arrayOf([PropTypes.string]),\n        ]),\n        moreData: PropTypes.arrayOf(PropTypes.string),\n      }),\n    ),\n  }),\n};\nconst defaultProps = {\n  data: {\n    timeline: [],\n    title: '',\n    detail: [],\n  },\n};\n\nclass Header extends React.Component {\n  state = {\n    showMoreData: false,\n  };\n\n  handleMouseEnter() {\n    this.setState({ showMoreData: true });\n  }\n\n  handleMouseLeave() {\n    this.setState({ showMoreData: false });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ModuleFragment background={theme.color.zoomGreyZero}>\n          <DetailList>\n            {get(this.props.data, 'timeline', []).map(item => (\n              <DetailListItem key={item.id}>\n                <ItemLabel>{item.label}</ItemLabel>\n                <ItemInfo>{item.info}</ItemInfo>\n              </DetailListItem>\n            ))}\n          </DetailList>\n        </ModuleFragment>\n        <ModuleFragment>\n          <PageHeading>{this.props.data.title}</PageHeading>\n        </ModuleFragment>\n        <ModuleFragment background={theme.color.zoomGreyZero}>\n          <DetailList>\n            {get(this.props.data, 'detail', []).map(item => (\n              <DetailListItem key={item.info}>\n                <ItemLabel>{item.label}</ItemLabel>\n                <ItemInfo\n                  onMouseEnter={() => item.moreData && this.handleMouseEnter()}\n                  onMouseLeave={() => item.moreData && this.handleMouseLeave()}\n                >\n                  {item.info}\n                  {item.moreData && this.state.showMoreData && (\n                    <Tooltip>{item.moreData.join(', ')}</Tooltip>\n                  )}\n                </ItemInfo>\n              </DetailListItem>\n            ))}\n          </DetailList>\n        </ModuleFragment>\n      </React.Fragment>\n    );\n  }\n}\n\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;\n\nexport default Header;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sectors from 'modules/IATI_Detail/fragments/Sectors/Sectors';\nimport TotalBudget from 'modules/IATI_Detail/fragments/TotalBudget/TotalBudget';\nimport Header from 'modules/IATI_Detail/fragments/Header/Header';\n\nconst propTypes = {\n  data: PropTypes.shape({\n    timeline: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string,\n        info: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.arrayOf([PropTypes.string]),\n        ]),\n      }),\n    ),\n    title: PropTypes.string,\n    detail: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string,\n        info: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.arrayOf([PropTypes.string]),\n        ]),\n      }),\n    ),\n    totalBudget: PropTypes.number,\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        year: PropTypes.string,\n        Budget: PropTypes.number,\n        BudgetColor: PropTypes.string,\n        Spent: PropTypes.number,\n        SpentColor: PropTypes.string,\n      }),\n    ),\n    sectors: PropTypes.shape({\n      name: PropTypes.string,\n      color: PropTypes.string,\n      children: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          color: PropTypes.string,\n          loc: PropTypes.number,\n        }),\n      ),\n    }),\n  }),\n};\nconst defaultProps = {\n  data: {\n    timeline: [],\n    title: '',\n    detail: [],\n    totalBudget: 0,\n    budgets: [],\n    sectors: {},\n  },\n};\n\nconst IatiDetail = props => {\n  return (\n    <React.Fragment>\n      <Header data={props.data} />\n      <TotalBudget\n        data={props.data.budgets}\n        totalBudget={props.data.totalBudget}\n      />\n      <Sectors data={props.data.sectors} />\n    </React.Fragment>\n  );\n};\n\nIatiDetail.propTypes = propTypes;\nIatiDetail.defaultProps = defaultProps;\n\nexport default IatiDetail;\n","const data = {\n  oipaParams: {\n    activityID: '1834411',\n    fields:\n      'activity_dates,title,last_updated_datetime,activity_status,recipient_countries,iati_identifier,sectors,budgets,aggregations',\n  },\n};\n\nexport default data;\n","import get from 'lodash/get';\nimport find from 'lodash/find';\nimport sumBy from 'lodash/sumBy';\nimport DateTime from 'luxon/src/datetime';\n\nimport theme from 'theme/Theme';\n\nfunction convertISOToDate(date) {\n  return date\n    ? DateTime.fromISO(date).toFormat('dd LLL yyyy')\n    : 'Data not available';\n}\n\nexport default function formatActivityData(data) {\n  if (!data) return undefined;\n  return {\n    timeline: [\n      {\n        id: 1,\n        label: 'Start date planned:',\n        info: convertISOToDate(\n          get(\n            find(data.activity_dates, d => {\n              return d.type.code === '1';\n            }),\n            'iso_date',\n            null\n          )\n        )\n      },\n      {\n        id: 2,\n        label: 'Start date actual:',\n        info: convertISOToDate(\n          get(\n            find(data.activity_dates, d => {\n              return d.type.code === '2';\n            }),\n            'iso_date',\n            null\n          )\n        )\n      },\n      {\n        id: 3,\n        label: 'End date planned:',\n        info: convertISOToDate(\n          get(\n            find(data.activity_dates, d => {\n              return d.type.code === '3';\n            }),\n            'iso_date',\n            null\n          )\n        )\n      },\n      {\n        id: 4,\n        label: 'End date actual:',\n        info: convertISOToDate(\n          get(\n            find(data.activity_dates, d => {\n              return d.type.code === '4';\n            }),\n            'iso_date',\n            null\n          )\n        )\n      }\n    ],\n    title: get(data.title, 'narratives[0].text', '-'),\n    detail: [\n      {\n        label: 'Last project update:',\n        info: convertISOToDate(get(data, 'last_updated_datetime', null))\n      },\n      {\n        label: 'Status:',\n        info: get(data, 'activity_status.name', '-')\n      },\n      {\n        label: 'Beneficiary country:',\n        info: `\n          ${get(data, 'recipient_countries[0].country.name', '')}\n          ${' '}\n          ${\n            get(data, 'recipient_countries.length', 0) > 1\n              ? `${data.recipient_countries.length - 1}+ more`\n              : ''\n          }\n        `,\n        moreData:\n          get(data, 'recipient_countries.length', 0) > 1\n            ? get(data, 'recipient_countries', []).map(country => {\n                return country.country.name;\n              })\n            : undefined\n      },\n      {\n        label: 'Data source:',\n        info: 'IATI Registry'\n      },\n      {\n        label: 'Reported by:',\n        info: 'Aidsfonds'\n      },\n      {\n        label: 'IATI identifier:',\n        info: get(data, 'iati_identifier', '-')\n      }\n    ],\n    budgets: data.budgets.map(b => {\n      return {\n        year: b.period_end.substr(0, 4),\n        Budget: b.value.value,\n        BudgetColor: theme.color.chartColorTwo,\n        Spent: data.aggregations.activity_children.expenditure_value,\n        SpentColor: theme.color.chartColorThree\n      };\n    }),\n    totalBudget: sumBy(data.budgets, 'value.value'),\n    sectors: {\n      name: 'root',\n      color: '#5886E8',\n      children: data.sectors.map(sector => {\n        return {\n          name: sector.sector.name,\n          color: '#F7F8FA',\n          loc: sector.percentage\n        };\n      })\n    }\n  };\n}\n","/* base */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport IatiDetailModule from 'modules/IATI_Detail/IatiDetail';\nimport PropTypes from 'prop-types';\n\n/* helpers */\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\n\n/* actions */\nimport * as oipaActions from 'services/actions/oipa';\n\n/* mock */\nimport mock from 'mediators/ModuleMediators/IatiDetailMediator/IatiDetailMediator.mock';\nimport formatActivityData from 'mediators/ModuleMediators/IatiDetailMediator/IatiDetailMediator.utils';\n\nconst propTypes = {\n  activityData: PropTypes.shape({\n    values: PropTypes.shape({\n      activityID: PropTypes.string,\n      fields: PropTypes.string\n    }),\n    request: PropTypes.bool,\n    success: PropTypes.bool,\n    data: PropTypes.shape({\n      iati_identifier: PropTypes.string,\n      title: PropTypes.shape({\n        id: PropTypes.number,\n        narratives: PropTypes.arrayOf(\n          PropTypes.shape({\n            text: PropTypes.string,\n            language: PropTypes.shape({\n              code: PropTypes.string,\n              name: PropTypes.string\n            })\n          })\n        )\n      }),\n      activity_status: PropTypes.shape({\n        code: PropTypes.string,\n        name: PropTypes.string\n      }),\n      activity_dates: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          iso_date: PropTypes.string,\n          type: PropTypes.shape({\n            code: PropTypes.string,\n            name: PropTypes.string\n          })\n        })\n      ),\n      recipient_countries: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          country: PropTypes.shape({\n            url: PropTypes.string,\n            code: PropTypes.string,\n            name: PropTypes.string\n          }),\n          percentage: PropTypes.number\n        })\n      ),\n      sectors: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          sector: PropTypes.shape({\n            url: PropTypes.string,\n            code: PropTypes.string,\n            name: PropTypes.string\n          }),\n          percentage: PropTypes.number,\n          vocabulary: PropTypes.shape({\n            code: PropTypes.string,\n            name: PropTypes.string\n          }),\n          vocabulary_uri: PropTypes.string\n        })\n      ),\n      last_updated_datetime: PropTypes.string\n    }),\n    error: PropTypes.shape({\n      status: PropTypes.string,\n      statusText: PropTypes.string,\n      result: PropTypes.object\n    })\n  })\n};\nconst defaultProps = {\n  activityData: {}\n};\n\nclass IatiDetailMediator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activityData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(\n      oipaActions.activityDataRequest({\n        ...mock.oipaParams,\n        activityID: get(\n          this.props,\n          'match.params.activity_id',\n          mock.oipaParams.activityID\n        )\n      })\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(this.props.activityData.data, prevProps.activityData.data)) {\n      const activityData = formatActivityData(\n        get(this.props.activityData, 'data', {})\n      );\n      this.setState({ activityData });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.activityData && (\n          <IatiDetailModule data={this.state.activityData} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activityData: state.activityData\n  };\n};\n\nIatiDetailMediator.propTypes = propTypes;\nIatiDetailMediator.defaultProps = defaultProps;\n\nexport default withRouter(connect(mapStateToProps)(IatiDetailMediator));\n","import styled from 'styled-components';\nimport theme from 'theme/Theme';\nimport { Box } from 'grommet';\n\nexport const FragmentInfoButton = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: ${theme.color.aidsFondsRed};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n  position: absolute;\n  right: 0;\n  top: 0;\n\n  &:hover {\n    background-color: darkgrey;\n  }\n\n  &:after {\n    content: 'i';\n    font-size: 13px;\n    text-align: center;\n    color: ${theme.color.aidsFondsWhite};\n    font-family: ${theme.color.zoomFontFamOne};\n    user-select: none;\n  }\n`;\n\nexport const FragmentInfo = styled(Box)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 250px;\n  background-color: white;\n  padding: 20px;\n  z-index: 2;\n  border-radius: 2%;\n  font-family: ${theme.font.zoomFontFamTwo};\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FragmentContainer,\n  FragmentContent,\n  FragmentDescription,\n  FragmentHeader,\n  FragmentVisualisation,\n} from 'components/sort/Fragments';\nimport { FragmentInfo, FragmentInfoButton } from './ModuleFragment.style';\n\nconst propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  description: PropTypes.string,\n  background: PropTypes.string,\n  fragmentInfo: PropTypes.string,\n  children: PropTypes.any,\n  showInfoButton: PropTypes.bool,\n};\nconst defaultProps = {\n  fragmentInfo: 'Lorem ipsum dolor simet empty module description.',\n  showInfoButton: false,\n};\n\nclass ModuleFragment extends React.Component {\n  state = {\n    showFragmentInfo: false,\n  };\n\n  handleMouseEnter() {\n    this.setState({ showFragmentInfo: true });\n  }\n\n  handleMouseLeave() {\n    this.setState({ showFragmentInfo: false });\n  }\n\n  render() {\n    return (\n      <FragmentContainer background={this.props.background}>\n        <FragmentContent>\n          {this.props.title && (\n            <FragmentHeader>{this.props.title}</FragmentHeader>\n          )}\n\n          {this.props.description && (\n            <FragmentDescription>{this.props.description}</FragmentDescription>\n          )}\n\n          {this.props.showInfoButton && (\n            <FragmentInfoButton\n              data-cy=\"tooltip-fragment-info\"\n              onMouseEnter={() => this.handleMouseEnter()}\n              onMouseLeave={() => this.handleMouseLeave()}\n            />\n          )}\n\n          {this.state.showFragmentInfo && (\n            <FragmentInfo elevation=\"medium\">\n              {this.props.fragmentInfo}\n            </FragmentInfo>\n          )}\n\n          <FragmentVisualisation>{this.props.children}</FragmentVisualisation>\n        </FragmentContent>\n      </FragmentContainer>\n    );\n  }\n}\n\nModuleFragment.propTypes = propTypes;\nModuleFragment.defaultProps = defaultProps;\n\nexport default ModuleFragment;\n","import theme from 'theme/Theme';\nimport styled from 'styled-components';\n\nexport const DescriptionParagraph = styled.div`\n  text-align: justify;\n  color: ${theme.color.zoomBlack};\n  font-family: ${theme.font.zoomFontFamTwo};\n  font-weight: 300;\n  line-height: 33px;\n  font-size: 18px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`;\n\nexport const BaseParagraph = styled.p`\n  color: ${theme.color.zoomGreyTwo};\n  font-weight: 300;\n  line-height: 1.5;\n  font-size: 20px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`;\n\nexport const DescriptionParagraphBold = styled(DescriptionParagraph)`\n  font-weight: 700;\n`;\n\nexport const PageIntroInitial = styled(BaseParagraph)`\n  font-size: 20px;\n  font-weight: 400;\n  font-family: ${theme.font.zoomFontFamOne};\n  margin-top: 0;\n`;\n\nexport const PageIntroSecondary = styled(BaseParagraph)`\n  font-size: 20px;\n  font-family: ${theme.font.zoomFontFamTwo};\n`;\n","import { Box, Button, DataTable, Text } from 'grommet';\nimport theme from 'theme/Theme';\nimport styled from 'styled-components';\nimport { BaseParagraph } from 'components/sort/Paragraphs';\nimport { SectionHeading } from 'components/sort/Headings';\n\nexport const fragmentContentWidth = '1024px';\n\nexport const FragmentParagraph = styled(BaseParagraph)`\n  font-family: ${theme.font.zoomFontFamTwo};\n  margin-top: 0;\n`;\n\nexport const FragmentContainer = styled(Box)`\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  position: relative;\n`;\n\nexport const FragmentContent = styled(Box)`\n  width: 100%;\n  max-width: ${fragmentContentWidth};\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const FragmentHeader = styled(SectionHeading)`\n  margin-top: 0;\n  margin-bottom: 50px;\n`;\nexport const FragmentDescription = styled(FragmentParagraph)`\n  max-width: 900px;\n  align-self: flex-start;\n`;\nexport const FragmentVisualisation = styled(Box)`\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-family: ${theme.font.zoomFontFamTwo};\n`;\n","import styled from 'styled-components';\n\nexport const ComponentBase = styled.div`\n  height: 280px;\n  width: 100%;\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { format } from 'd3-format';\nimport { ComponentBase } from './BarChartVertical.styles';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      Budget: PropTypes.number,\n      BudgetColor: PropTypes.string,\n      Spent: PropTypes.number,\n      SpentColor: PropTypes.string,\n      year: PropTypes.string,\n    }),\n  ),\n  keys: PropTypes.arrayOf(PropTypes.string),\n  enableLabel: PropTypes.bool,\n  disabledLegend: PropTypes.bool,\n};\n\nconst defaultProps = {\n  disabledLegend: false,\n  enableLabel: false,\n  data: [],\n  keys: ['', ''],\n};\n\nconst BarChartVertical = props => {\n  return (\n    <ComponentBase>\n      <ResponsiveBar\n        data={props.data}\n        keys={props.keys}\n        indexBy=\"year\"\n        margin={{\n          top: 0,\n          right: 0,\n          bottom: 50,\n          left: 60,\n        }}\n        padding={0.5}\n        groupMode=\"grouped\"\n        colors=\"nivo\"\n        colorBy={e => {\n          const t = e.id;\n          return e.data[''.concat(t, 'Color')];\n        }}\n        defs={[\n          {\n            id: 'dots',\n            type: 'patternDots',\n            background: 'inherit',\n            color: '#38bcb2',\n            size: 4,\n            padding: 1,\n            stagger: true,\n          },\n          {\n            id: 'lines',\n            type: 'patternLines',\n            background: 'inherit',\n            color: '#eed312',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10,\n          },\n        ]}\n        fill={[\n          {\n            match: {\n              id: 'fries',\n            },\n            id: 'dots',\n          },\n          {\n            match: {\n              id: 'sandwich',\n            },\n            id: 'lines',\n          },\n        ]}\n        borderColor=\"inherit:darker(1.6)\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 0,\n          tickPadding: 10,\n          tickRotation: 0,\n          legend: '',\n          legendPosition: 'middle',\n          legendOffset: 32,\n        }}\n        axisLeft={{\n          tickSize: 0,\n          tickPadding: 15,\n          tickRotation: 0,\n          legend: '',\n          legendPosition: 'middle',\n          legendOffset: -40,\n          format: value => `$${format('.2s')(value)}`,\n        }}\n        enableLabel={!!props.enableLabel}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor=\"inherit:darker(1.6)\"\n        animate={false}\n        motionStiffness={90}\n        motionDamping={15}\n        tooltipFormat={value =>\n          `$ ${value.toLocaleString(\n            {},\n            {\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 2,\n            },\n          )}`\n        }\n        legends={\n          props.disabledLegend\n            ? []\n            : [\n                {\n                  dataFrom: 'keys',\n                  anchor: 'bottom-left',\n                  direction: 'row',\n                  justify: false,\n                  translateX: 0,\n                  translateY: 50,\n                  itemsSpacing: 2,\n                  itemWidth: 100,\n                  itemHeight: 20,\n                  itemDirection: 'left-to-right',\n                  itemOpacity: 0.85,\n                  symbolSize: 15,\n                  effects: [\n                    {\n                      on: 'hover',\n                      style: {\n                        itemOpacity: 1,\n                      },\n                    },\n                  ],\n                },\n              ]\n        }\n      />\n    </ComponentBase>\n  );\n};\n\nBarChartVertical.propTypes = propTypes;\nBarChartVertical.defaultProps = defaultProps;\n\nexport default BarChartVertical;\n"],"sourceRoot":""}