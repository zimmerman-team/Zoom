{"version":3,"sources":["app/mediators/ComponentMediators/ExplorePanelMediator/__generated__/ExplorePanelMediator_dropDownData.graphql.js","app/mediators/ModuleMediators/HomeModuleMediator/__generated__/HomeModuleMediator_indicatorAggregations.graphql.js","app/mediators/ModuleMediators/HomeModuleMediator/__generated__/HomeModuleMediatorRefetchQuery.graphql.js","app/mediators/ModuleMediators/HomeModuleMediator/HomeModuleMediator.utils.js","app/components/GeoMap/components/Markers/LocationMarker/LocationMarker.icon.js","app/components/GeoMap/components/Markers/LocationMarker/LocationMarker.jsx","app/components/GeoMap/components/Legends/Legend.styles.js","app/components/GeoMap/components/Legends/LayerLegend/LayerLegend.styles.js","app/utils/genericUtils.js","app/components/GeoMap/components/Legends/LayerLegend/LayerLegend.jsx","app/components/GeoMap/components/Legends/LocationLegend/LocationLegend.jsx","app/components/GeoMap/components/Markers/CircleMarker/CircleMarker.styles.js","app/assets/icons/CircleMarkerIcon.js","app/components/GeoMap/components/Markers/CircleMarker/CircleMarker.jsx","app/components/GeoMap/components/Legends/CircleLegend/CircleLegend.styles.js","app/components/GeoMap/components/Legends/CircleLegend/CircleLegend.jsx","app/components/GeoMap/components/map-style.js","app/components/GeoMap/components/ToolTips/ToolTip.style.js","app/components/GeoMap/components/ToolTips/MarkerInfo/MarkerInfo.jsx","app/components/GeoMap/components/ToolTips/LayerInfo/LayerInfo.jsx","app/components/CustomYearSelector/CustomYearSelector.style.js","app/components/CustomYearSelector/CustomYearSelector.jsx","app/assets/icons/IconOnlyPlus.js","app/assets/icons/IconOnlyMinus.js","app/assets/icons/IconOnlyFullScreen.js","app/components/GeoMap/components/MapControls/MapControls.style.js","app/components/GeoMap/components/MapControls/MapControls.jsx","app/components/GeoMap/GeoMap.style.js","app/components/GeoMap/GeoMap.jsx","app/components/GeoMap/GeoMap.util.js","app/modules/home/HomeModule.styles.js","app/mediators/ComponentMediators/ExplorePanelMediator/ExplorePanelMediator.js","app/modules/home/HomeModule.jsx","app/mediators/ModuleMediators/HomeModuleMediator/HomeModuleMediator.consts.js","app/mediators/ModuleMediators/HomeModuleMediator/HomeModuleMediator.js"],"names":["node","v0","kind","alias","name","args","storageKey","v1","type","metadata","argumentDefinitions","selections","concreteType","plural","hash","module","exports","value","v2","variableName","v3","v4","v5","v6","v7","v8","v9","v10","defaultValue","operationKind","id","text","fragment","operation","formatYearParam","val","yearArray","currentYear","push","toString","pinStyle","fill","stroke","LocationMarkerIcon","_this$props","this","props","_this$props$size","size","onMouseEnter","onMouseLeave","extraStyle","react_default","a","createElement","height","viewBox","style","Object","objectSpread","transform","concat","d","PureComponent","locationMarker","indicator","index","setMarkerInfo","esm","key","latitude","parseFloat","longitude","LocationMarker_icon_LocationMarkerIcon","LegendItem","styled","div","withConfig","displayName","componentId","LegendLabel","theme","color","zoomBlack","font","zoomFontFamOne","LegendNumberContainer","LegendNumber","smallTextBlack","zoomFontFamTwo","ColorGradient","formatNumber","number","replace","layerLegend","legendName","min","max","third","Math","round","firstThird","secondThird","locationLegend","position","top","left","CircleContainer","SvgCircleMarker","assign","xmlns","xmlnsXlink","width","margin","x","y","xlinkHref","filterUnits","dy","in","result","stdDeviation","filter","strokeOpacity","strokeWidth","mask","fillOpacity","strokeMiterlimit","getMeasure","maxVal","minVal","difference","percentage","positionAdjustment","circleMarker","bottom","maxValue","minValue","right","CircleMarkerIcon","CircleLegendItem","CircleNumber","CircleLegendLabel","CircleLegendNum","circleLegend","dataLayer","fromJS","source","interactive","paint","fill-color","property","stops","fill-opacity","borderStyle","line-width","line-color","ToolTipContainer","Popup","ToolTipText","ToolTipLabel","getOffsetTop","hoverMarkerInfo","offset","undefined","markerInfo","countryName","country","charAt","toUpperCase","slice","tipSize","closeButton","offsetTop","layerInfo","hoverLayerInfo","properties","anchor","lngLat","className","ComponentBase","YearLabel","SelectedYearLabel","aidsFondsBlue","aidsFondsWhite","StartControl","aidsFondsRed","EndControl","CustomYearSelector","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","numArray","mouseDown","selectedYears","handleMouseEnter","bind","assertThisInitialized","handleMouseDown","handleMouseUp","renderYearLabels","setWrapperRef","handleMoveOutside","document","addEventListener","i","setState","prevProps","prevState","isEqual","selectYear","parseInt","length","removeEventListener","wrapperRef","event","contains","target","toConsumableArray","numberInt","startInt","endInt","yearInd","indexOf","splice","unshift","_this2","onMouseDown","onMouseUp","ref","map","React","Component","defaultProps","SvgOnlyIconPlus","SvgOnlyIconMinus","SvgOnlyIconFullScreen","ButtonContainer","zoomGreyThree","DisabledElement","MapControls","MapControls_style_ComponentBase","onClick","onZoomIn","data-cy","IconOnlyPlus","onZoomOut","IconOnlyMinus","onFullScreen","IconOnlyFullScreen","MapContainer","LegendContainer","YearContainer","ControlsContainer","GeoMap","_Component","defineProperty","viewport","features","feature","find","f","layer","history","iso2","_updateViewport","zoom","defaultMapStyle","MAP_STYLE","sources","layers","mapStyle","markerArray","legends","bearing","pitch","values","fullScreen","handleZoomIn","handleZoomOut","handleFullscreen","inherits","createClass","indicatorData","updateMap","borderData","data","setIn","set","get","mapStylez","ind","findIndex","forEach","item","locationMarkers","circleMarkers","generateMarkers","legendArray","generateLegends","_this$state","_this$state2","components_MapControls_MapControls","components_CustomYearSelector_CustomYearSelector","scrollZoom","onViewportChange","onHover","_setLayerInfo","_onCountryClick","mapboxApiAccessToken","_showLayerInfo","_showMarkerInfo","withRouter","ControlPanelContainer","ModuleContainer","Box","ExplorePanelMediator","allIndNames","allCountries","allRegions","self","label","dropDownData","allIndicators","edges","onlyUnique","sortBy","otherProps","objectWithoutProperties","DataExplorePanel","indNames","countries","regions","createFragmentContainer","__webpack_require__","HomeModule","dialogOpen","sideBarOpen","indicators","onClose","toggleSideBar","Fragment","components_GeoMap_GeoMap","yearPeriod","dataPaneOpen","ComponentMediators_ExplorePanelMediator_ExplorePanelMediator","connect","open","initialState","selectedInd1","selectedInd2","subIndicators1","subIndicators2","selectedCountryVal","selectedSubInd1","selectedSubInd2","selectedRegionVal","Date","getFullYear","yearBefore","HomeModuleMediator","selectInd1","selectInd2","selectSubInd1","selectSubInd2","refetch","selectCountry","selectRegion","resetAll","indicatorAggregations","updateIndicators","countryLayerData","countryLayers","existLayerIndex","feat","geolocationIso2","geometry","JSON","parse","geolocationPolygons","geolocationTag","percentile","apply","formatCountryLayerData","indicators1","countryCircleData","countryCenteredData","existCountryIndex","geolocationCenterLongLat","coord","coordinates","indicatorName","formatCountryCenterData","indicators2","featureCollection","accessor","scale","scaleQuantile","domain","range","updatePercentiles","ind1","arguments","ind2","datePeriod","subInd1","subInd2","refetchVars","indicator1","indicator2","countriesISO2","countryCodes","regionCountryCodes","jointCountries","region","countryCode","formatCountryParam","singleInd1","singleInd2","relay","array","it","subIndicatorIndex","countryIndex","regionIndex","home_HomeModule","defaultYear","createRefetchContainer"],"mappings":"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","file":"static/js/13.674007f3.chunk.js","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type ExplorePanelMediator_dropDownData$ref: FragmentReference;\nexport type ExplorePanelMediator_dropDownData = {|\n  +allIndicators: ?{|\n    +edges: $ReadOnlyArray<?{|\n      +node: ?{|\n        +name: string\n      |}\n    |}>\n  |},\n  +allCountries: ?{|\n    +edges: $ReadOnlyArray<?{|\n      +node: ?{|\n        +name: string,\n        +iso2: string,\n      |}\n    |}>\n  |},\n  +allRegions: ?{|\n    +edges: $ReadOnlyArray<?{|\n      +node: ?{|\n        +name: string,\n        +country: ?$ReadOnlyArray<?{|\n          +iso2: string\n        |}>,\n      |}\n    |}>\n  |},\n  +$refType: ExplorePanelMediator_dropDownData$ref,\n|};\n*/\n\n\nconst node/*: ConcreteFragment*/ = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"iso2\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Fragment\",\n  \"name\": \"ExplorePanelMediator_dropDownData\",\n  \"type\": \"Query\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"allIndicators\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"IndicatorNodeConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"IndicatorNodeEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"IndicatorNode\",\n              \"plural\": false,\n              \"selections\": [\n                v0\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"allCountries\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"CountryNodeConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"CountryNodeEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"CountryNode\",\n              \"plural\": false,\n              \"selections\": [\n                v0,\n                v1\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"allRegions\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"RegionNodeConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"RegionNodeEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"RegionNode\",\n              \"plural\": false,\n              \"selections\": [\n                v0,\n                {\n                  \"kind\": \"LinkedField\",\n                  \"alias\": null,\n                  \"name\": \"country\",\n                  \"storageKey\": null,\n                  \"args\": null,\n                  \"concreteType\": \"CountryNode\",\n                  \"plural\": true,\n                  \"selections\": [\n                    v1\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'c1f08de7ce98fe9ea082f32f90eda020';\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type HomeModuleMediator_indicatorAggregations$ref: FragmentReference;\nexport type HomeModuleMediator_indicatorAggregations = {|\n  +indicators1: ?$ReadOnlyArray<?{|\n    +indicatorName: ?string,\n    +geolocationIso2: ?string,\n    +geolocationTag: ?string,\n    +geolocationPolygons: ?any,\n    +date: ?string,\n    +value: ?number,\n  |}>,\n  +indicators2: ?$ReadOnlyArray<?{|\n    +indicatorName: ?string,\n    +geolocationIso2: ?string,\n    +geolocationTag: ?string,\n    +geolocationCenterLongLat: ?any,\n    +date: ?string,\n    +value: ?number,\n  |}>,\n  +subIndicators1: ?{|\n    +edges: $ReadOnlyArray<?{|\n      +node: ?{|\n        +name: string\n      |}\n    |}>\n  |},\n  +subIndicators2: ?{|\n    +edges: $ReadOnlyArray<?{|\n      +node: ?{|\n        +name: string\n      |}\n    |}>\n  |},\n  +$refType: HomeModuleMediator_indicatorAggregations$ref,\n|};\n*/\n\n\nconst node/*: ConcreteFragment*/ = (function(){\nvar v0 = [\n  \"null\"\n],\nv1 = {\n  \"kind\": \"Literal\",\n  \"name\": \"aggregation\",\n  \"value\": [\n    \"Sum(value)\"\n  ],\n  \"type\": \"[String]\"\n},\nv2 = {\n  \"kind\": \"Variable\",\n  \"name\": \"date_In\",\n  \"variableName\": \"datePeriod\",\n  \"type\": \"[String]\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"geolocationIso2_In\",\n  \"variableName\": \"countriesISO2\",\n  \"type\": \"[String]\"\n},\nv4 = {\n  \"kind\": \"Literal\",\n  \"name\": \"orderBy\",\n  \"value\": [\n    \"indicatorName\"\n  ],\n  \"type\": \"[String]\"\n},\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"indicatorName\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv6 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"geolocationIso2\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv7 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"geolocationTag\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv8 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"date\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv9 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"value\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv10 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"edges\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"FiltersNodeEdge\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"node\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"FiltersNode\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"name\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Fragment\",\n  \"name\": \"HomeModuleMediator_indicatorAggregations\",\n  \"type\": \"Query\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"datePeriod\",\n      \"type\": \"[String]\",\n      \"defaultValue\": v0\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"indicator1\",\n      \"type\": \"[String]\",\n      \"defaultValue\": v0\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"indicator2\",\n      \"type\": \"[String]\",\n      \"defaultValue\": v0\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"subInd1\",\n      \"type\": \"[String]\",\n      \"defaultValue\": v0\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"subInd2\",\n      \"type\": \"[String]\",\n      \"defaultValue\": v0\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"countriesISO2\",\n      \"type\": \"[String]\",\n      \"defaultValue\": v0\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"singleInd1\",\n      \"type\": \"String\",\n      \"defaultValue\": \"null\"\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"singleInd2\",\n      \"type\": \"String\",\n      \"defaultValue\": \"null\"\n    }\n  ],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"indicators1\",\n      \"name\": \"datapointsAggregation\",\n      \"storageKey\": null,\n      \"args\": [\n        v1,\n        v2,\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"filterName_In\",\n          \"variableName\": \"subInd1\",\n          \"type\": \"[String]\"\n        },\n        v3,\n        {\n          \"kind\": \"Literal\",\n          \"name\": \"groupBy\",\n          \"value\": [\n            \"indicatorName\",\n            \"geolocationTag\",\n            \"date\",\n            \"geolocationIso2\",\n            \"geolocationPolygons\"\n          ],\n          \"type\": \"[String]\"\n        },\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"indicatorName_In\",\n          \"variableName\": \"indicator1\",\n          \"type\": \"[String]\"\n        },\n        v4\n      ],\n      \"concreteType\": \"DatapointsAggregationNode\",\n      \"plural\": true,\n      \"selections\": [\n        v5,\n        v6,\n        v7,\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"geolocationPolygons\",\n          \"args\": null,\n          \"storageKey\": null\n        },\n        v8,\n        v9\n      ]\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"indicators2\",\n      \"name\": \"datapointsAggregation\",\n      \"storageKey\": null,\n      \"args\": [\n        v1,\n        v2,\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"filterName_In\",\n          \"variableName\": \"subInd2\",\n          \"type\": \"[String]\"\n        },\n        v3,\n        {\n          \"kind\": \"Literal\",\n          \"name\": \"groupBy\",\n          \"value\": [\n            \"indicatorName\",\n            \"geolocationTag\",\n            \"date\",\n            \"geolocationIso2\",\n            \"geolocationCenterLongLat\"\n          ],\n          \"type\": \"[String]\"\n        },\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"indicatorName_In\",\n          \"variableName\": \"indicator2\",\n          \"type\": \"[String]\"\n        },\n        v4\n      ],\n      \"concreteType\": \"DatapointsAggregationNode\",\n      \"plural\": true,\n      \"selections\": [\n        v5,\n        v6,\n        v7,\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"geolocationCenterLongLat\",\n          \"args\": null,\n          \"storageKey\": null\n        },\n        v8,\n        v9\n      ]\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"subIndicators1\",\n      \"name\": \"allFilters\",\n      \"storageKey\": null,\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"indicator_Name\",\n          \"variableName\": \"singleInd1\",\n          \"type\": \"String\"\n        }\n      ],\n      \"concreteType\": \"FiltersNodeConnection\",\n      \"plural\": false,\n      \"selections\": v10\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"subIndicators2\",\n      \"name\": \"allFilters\",\n      \"storageKey\": null,\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"indicator_Name\",\n          \"variableName\": \"singleInd2\",\n          \"type\": \"String\"\n        }\n      ],\n      \"concreteType\": \"FiltersNodeConnection\",\n      \"plural\": false,\n      \"selections\": v10\n    }\n  ]\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '0c28220be0d7b9b710110560d662b7a9';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash f8402157ee282f86a5efe2c270f9376f\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype HomeModuleMediator_indicatorAggregations$ref = any;\nexport type HomeModuleMediatorRefetchQueryVariables = {|\n  datePeriod: $ReadOnlyArray<?string>,\n  indicator1: $ReadOnlyArray<?string>,\n  indicator2: $ReadOnlyArray<?string>,\n  subInd1: $ReadOnlyArray<?string>,\n  subInd2: $ReadOnlyArray<?string>,\n  countriesISO2: $ReadOnlyArray<?string>,\n  singleInd1: string,\n  singleInd2: string,\n|};\nexport type HomeModuleMediatorRefetchQueryResponse = {|\n  +$fragmentRefs: HomeModuleMediator_indicatorAggregations$ref\n|};\nexport type HomeModuleMediatorRefetchQuery = {|\n  variables: HomeModuleMediatorRefetchQueryVariables,\n  response: HomeModuleMediatorRefetchQueryResponse,\n|};\n*/\n\n\n/*\nquery HomeModuleMediatorRefetchQuery(\n  $datePeriod: [String]!\n  $indicator1: [String]!\n  $indicator2: [String]!\n  $subInd1: [String]!\n  $subInd2: [String]!\n  $countriesISO2: [String]!\n  $singleInd1: String!\n  $singleInd2: String!\n) {\n  ...HomeModuleMediator_indicatorAggregations_cDkNI\n}\n\nfragment HomeModuleMediator_indicatorAggregations_cDkNI on Query {\n  indicators1: datapointsAggregation(groupBy: [\"indicatorName\", \"geolocationTag\", \"date\", \"geolocationIso2\", \"geolocationPolygons\"], orderBy: [\"indicatorName\"], aggregation: [\"Sum(value)\"], date_In: $datePeriod, indicatorName_In: $indicator1, geolocationIso2_In: $countriesISO2, filterName_In: $subInd1) {\n    indicatorName\n    geolocationIso2\n    geolocationTag\n    geolocationPolygons\n    date\n    value\n  }\n  indicators2: datapointsAggregation(groupBy: [\"indicatorName\", \"geolocationTag\", \"date\", \"geolocationIso2\", \"geolocationCenterLongLat\"], orderBy: [\"indicatorName\"], aggregation: [\"Sum(value)\"], date_In: $datePeriod, indicatorName_In: $indicator2, geolocationIso2_In: $countriesISO2, filterName_In: $subInd2) {\n    indicatorName\n    geolocationIso2\n    geolocationTag\n    geolocationCenterLongLat\n    date\n    value\n  }\n  subIndicators1: allFilters(indicator_Name: $singleInd1) {\n    edges {\n      node {\n        name\n        id\n      }\n    }\n  }\n  subIndicators2: allFilters(indicator_Name: $singleInd2) {\n    edges {\n      node {\n        name\n        id\n      }\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"datePeriod\",\n    \"type\": \"[String]!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"indicator1\",\n    \"type\": \"[String]!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"indicator2\",\n    \"type\": \"[String]!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"subInd1\",\n    \"type\": \"[String]!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"subInd2\",\n    \"type\": \"[String]!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"countriesISO2\",\n    \"type\": \"[String]!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"singleInd1\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"singleInd2\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"Literal\",\n  \"name\": \"aggregation\",\n  \"value\": [\n    \"Sum(value)\"\n  ],\n  \"type\": \"[String]\"\n},\nv2 = {\n  \"kind\": \"Variable\",\n  \"name\": \"date_In\",\n  \"variableName\": \"datePeriod\",\n  \"type\": \"[String]\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"geolocationIso2_In\",\n  \"variableName\": \"countriesISO2\",\n  \"type\": \"[String]\"\n},\nv4 = {\n  \"kind\": \"Literal\",\n  \"name\": \"orderBy\",\n  \"value\": [\n    \"indicatorName\"\n  ],\n  \"type\": \"[String]\"\n},\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"indicatorName\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv6 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"geolocationIso2\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv7 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"geolocationTag\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv8 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"date\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv9 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"value\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv10 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"edges\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"FiltersNodeEdge\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"node\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"FiltersNode\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"name\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"operationKind\": \"query\",\n  \"name\": \"HomeModuleMediatorRefetchQuery\",\n  \"id\": null,\n  \"text\": \"query HomeModuleMediatorRefetchQuery(\\n  $datePeriod: [String]!\\n  $indicator1: [String]!\\n  $indicator2: [String]!\\n  $subInd1: [String]!\\n  $subInd2: [String]!\\n  $countriesISO2: [String]!\\n  $singleInd1: String!\\n  $singleInd2: String!\\n) {\\n  ...HomeModuleMediator_indicatorAggregations_cDkNI\\n}\\n\\nfragment HomeModuleMediator_indicatorAggregations_cDkNI on Query {\\n  indicators1: datapointsAggregation(groupBy: [\\\"indicatorName\\\", \\\"geolocationTag\\\", \\\"date\\\", \\\"geolocationIso2\\\", \\\"geolocationPolygons\\\"], orderBy: [\\\"indicatorName\\\"], aggregation: [\\\"Sum(value)\\\"], date_In: $datePeriod, indicatorName_In: $indicator1, geolocationIso2_In: $countriesISO2, filterName_In: $subInd1) {\\n    indicatorName\\n    geolocationIso2\\n    geolocationTag\\n    geolocationPolygons\\n    date\\n    value\\n  }\\n  indicators2: datapointsAggregation(groupBy: [\\\"indicatorName\\\", \\\"geolocationTag\\\", \\\"date\\\", \\\"geolocationIso2\\\", \\\"geolocationCenterLongLat\\\"], orderBy: [\\\"indicatorName\\\"], aggregation: [\\\"Sum(value)\\\"], date_In: $datePeriod, indicatorName_In: $indicator2, geolocationIso2_In: $countriesISO2, filterName_In: $subInd2) {\\n    indicatorName\\n    geolocationIso2\\n    geolocationTag\\n    geolocationCenterLongLat\\n    date\\n    value\\n  }\\n  subIndicators1: allFilters(indicator_Name: $singleInd1) {\\n    edges {\\n      node {\\n        name\\n        id\\n      }\\n    }\\n  }\\n  subIndicators2: allFilters(indicator_Name: $singleInd2) {\\n    edges {\\n      node {\\n        name\\n        id\\n      }\\n    }\\n  }\\n}\\n\",\n  \"metadata\": {},\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"HomeModuleMediatorRefetchQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": [\n      {\n        \"kind\": \"FragmentSpread\",\n        \"name\": \"HomeModuleMediator_indicatorAggregations\",\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"countriesISO2\",\n            \"variableName\": \"countriesISO2\",\n            \"type\": null\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"datePeriod\",\n            \"variableName\": \"datePeriod\",\n            \"type\": null\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"indicator1\",\n            \"variableName\": \"indicator1\",\n            \"type\": null\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"indicator2\",\n            \"variableName\": \"indicator2\",\n            \"type\": null\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"singleInd1\",\n            \"variableName\": \"singleInd1\",\n            \"type\": null\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"singleInd2\",\n            \"variableName\": \"singleInd2\",\n            \"type\": null\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"subInd1\",\n            \"variableName\": \"subInd1\",\n            \"type\": null\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"subInd2\",\n            \"variableName\": \"subInd2\",\n            \"type\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"HomeModuleMediatorRefetchQuery\",\n    \"argumentDefinitions\": v0,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"indicators1\",\n        \"name\": \"datapointsAggregation\",\n        \"storageKey\": null,\n        \"args\": [\n          v1,\n          v2,\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"filterName_In\",\n            \"variableName\": \"subInd1\",\n            \"type\": \"[String]\"\n          },\n          v3,\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"groupBy\",\n            \"value\": [\n              \"indicatorName\",\n              \"geolocationTag\",\n              \"date\",\n              \"geolocationIso2\",\n              \"geolocationPolygons\"\n            ],\n            \"type\": \"[String]\"\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"indicatorName_In\",\n            \"variableName\": \"indicator1\",\n            \"type\": \"[String]\"\n          },\n          v4\n        ],\n        \"concreteType\": \"DatapointsAggregationNode\",\n        \"plural\": true,\n        \"selections\": [\n          v5,\n          v6,\n          v7,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"geolocationPolygons\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          v8,\n          v9\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"indicators2\",\n        \"name\": \"datapointsAggregation\",\n        \"storageKey\": null,\n        \"args\": [\n          v1,\n          v2,\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"filterName_In\",\n            \"variableName\": \"subInd2\",\n            \"type\": \"[String]\"\n          },\n          v3,\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"groupBy\",\n            \"value\": [\n              \"indicatorName\",\n              \"geolocationTag\",\n              \"date\",\n              \"geolocationIso2\",\n              \"geolocationCenterLongLat\"\n            ],\n            \"type\": \"[String]\"\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"indicatorName_In\",\n            \"variableName\": \"indicator2\",\n            \"type\": \"[String]\"\n          },\n          v4\n        ],\n        \"concreteType\": \"DatapointsAggregationNode\",\n        \"plural\": true,\n        \"selections\": [\n          v5,\n          v6,\n          v7,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"geolocationCenterLongLat\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          v8,\n          v9\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"subIndicators1\",\n        \"name\": \"allFilters\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"indicator_Name\",\n            \"variableName\": \"singleInd1\",\n            \"type\": \"String\"\n          }\n        ],\n        \"concreteType\": \"FiltersNodeConnection\",\n        \"plural\": false,\n        \"selections\": v10\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"subIndicators2\",\n        \"name\": \"allFilters\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"indicator_Name\",\n            \"variableName\": \"singleInd2\",\n            \"type\": \"String\"\n          }\n        ],\n        \"concreteType\": \"FiltersNodeConnection\",\n        \"plural\": false,\n        \"selections\": v10\n      }\n    ]\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '83e0710f920e22fea5f61970f7255950';\nmodule.exports = node;\n","import findIndex from 'lodash/findIndex';\nimport { scaleQuantile } from 'd3-scale';\nimport { range } from 'd3-array';\n\nexport function formatCountryLayerData(indicators) {\n  const countryLayers = {\n    type: 'FeatureCollection',\n    features: []\n  };\n\n  indicators.forEach(indicator => {\n    const existLayerIndex = findIndex(countryLayers.features, feat => {\n      return indicator.geolocationIso2 === feat.properties.iso2;\n    });\n\n    // so here we check if we already added a country to the countries layers\n    // and if it has been added we just add the indicators value instead of pushing\n    // another country\n    // this needs to be done when using several data points with the same country\n    // example: data points with different years, will have same countries\n    // JSON.parse('{ \"name\":\"John\", \"age\":30, \"city\":\"New York\"}')\n    if (existLayerIndex === -1) {\n      countryLayers.features.push({\n        // we need to do a double parse here, cause we retrieve a json\n        // which is i dunno a double string or sth :D\n        geometry: JSON.parse(JSON.parse(indicator.geolocationPolygons)),\n        properties: {\n          name: indicator.geolocationTag,\n          iso2: indicator.geolocationIso2,\n          value: indicator.value,\n          percentile: 0\n        }\n      });\n    } else {\n      const changeFeat = countryLayers.features[existLayerIndex];\n      changeFeat.properties.value += indicator.value;\n    }\n  });\n\n  // And we add min and max values to be used for legends and what not\n  countryLayers.minValue = Math.min.apply(\n    Math,\n    countryLayers.features.map(feature => {\n      return feature.properties.value;\n    })\n  );\n\n  countryLayers.maxValue = Math.max.apply(\n    Math,\n    countryLayers.features.map(feature => {\n      return feature.properties.value;\n    })\n  );\n\n  return countryLayers;\n}\n\nexport function formatCountryCenterData(indicators) {\n  const countryCenteredData = [];\n\n  indicators.forEach(indicator => {\n    const existCountryIndex = findIndex(countryCenteredData, [\n      'geolocationIso2',\n      indicator.geolocationIso2\n    ]);\n\n    if (indicator.geolocationCenterLongLat) {\n      // so here we check if we already added a country to the countries layers\n      // and if it has been added we just add the indicators value instead of pushing\n      // another country\n      // this needs to be done when using several data points with the same country\n      // example: data points with different years, will have same countries\n      if (existCountryIndex === -1) {\n        // we need to do a double parse here, cause we retrieve a json\n        // which is i dunno a double string or sth :D\n        const coord = JSON.parse(JSON.parse(indicator.geolocationCenterLongLat))\n          .coordinates;\n        countryCenteredData.push({\n          value: indicator.value,\n          name: indicator.indicatorName,\n          geolocationIso2: indicator.geolocationIso2,\n          maxValue,\n          minValue,\n          longitude: coord[0],\n          latitude: coord[1],\n          country: indicator.geolocationTag\n        });\n      } else\n        countryCenteredData[existCountryIndex].value =\n          countryCenteredData[existCountryIndex].value + indicator.value;\n    }\n  });\n\n  const maxValue = Math.max.apply(\n    Math,\n    countryCenteredData.map(indicator => {\n      return indicator.value;\n    })\n  );\n  const minValue = Math.min.apply(\n    Math,\n    countryCenteredData.map(indicator => {\n      return indicator.value;\n    })\n  );\n\n  countryCenteredData.forEach(indicator => {\n    indicator.maxValue = maxValue;\n    indicator.minValue = minValue;\n  });\n\n  return countryCenteredData;\n}\n\n// formats the param for the datapoints aggregations\n// according to the single selected countries\n// and according to the countries of selected regions\n// no duplicate countries should be in this param\nexport function formatCountryParam(countryCodes, regionCountryCodes) {\n  let jointCountries = [];\n  jointCountries = jointCountries.concat(countryCodes);\n\n  regionCountryCodes.forEach(region => {\n    if (region !== 'select all')\n      region.forEach(countryCode => {\n        if (jointCountries.indexOf(countryCode.iso2) === -1)\n          jointCountries.push(countryCode.iso2);\n      });\n  });\n\n  return jointCountries;\n}\n\n// Basically takes in a start year and an\n// end year as an array and makes a string array of year between them\n// including them both as well\nexport function formatYearParam(val) {\n  // So here we will need to make an array of each year between the first\n  // and last year received\n  const yearArray = [];\n  let currentYear = val[0];\n  while (currentYear < val[1] + 1) {\n    yearArray.push(currentYear.toString());\n    currentYear += 1;\n  }\n  return yearArray;\n}\n\n// Updates layer percentiles depending on the value\nexport function updatePercentiles(featureCollection, accessor) {\n  const { features } = featureCollection;\n  const scale = scaleQuantile()\n    .domain(features.map(accessor))\n    .range(range(9));\n  features.forEach(f => {\n    const value = accessor(f);\n    f.properties.value = value;\n    f.properties.percentile = scale(value);\n  });\n}\n","import React, { PureComponent } from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  fill: '#d00',\n  stroke: 'none',\n};\n\nexport default class LocationMarkerIcon extends PureComponent {\n  render() {\n    const { size = 20, onMouseEnter, onMouseLeave, extraStyle } = this.props;\n\n    return (\n      <svg\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        height={size}\n        viewBox=\"0 0 24 24\"\n        style={{\n          ...pinStyle,\n          transform: `translate(${-size / 2}px,${-size}px)`,\n          ...extraStyle,\n        }}\n      >\n        <path d={ICON} />\n      </svg>\n    );\n  }\n}\n","import LocationMarkerIcon from 'components/GeoMap/components/Markers/LocationMarker/LocationMarker.icon';\nimport { Marker } from 'react-map-gl';\nimport React from 'react';\n\n// This component is specific for the react-map-gl, thus there's no story books\n// or unit tests for it as a seperate component\nconst locationMarker = (indicator, index, setMarkerInfo) =>\n  indicator && (\n    <Marker\n      key={`marker-${index}`}\n      latitude={parseFloat(indicator['Lat location'])}\n      longitude={parseFloat(indicator['Long location'])}\n    >\n      <LocationMarkerIcon\n        size={20}\n        onMouseEnter={() => setMarkerInfo(indicator)}\n        onMouseLeave={() => setMarkerInfo(null)}\n      />\n    </Marker>\n  );\n\nexport default locationMarker;\n","import styled from 'styled-components';\nimport theme from 'theme/Theme';\n\nexport const LegendItem = styled.div`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  margin-top: 14px;\n  padding: 4px 26px 14px 18px;\n  background-color: rgba(239, 239, 239, 0.72);\n`;\n\nexport const LegendLabel = styled.div`\n  padding: 10px 0;\n  margin-left: 3px;\n  line-height: 12px;\n  color: ${theme.color.zoomBlack};\n  font-family: ${theme.font.zoomFontFamOne};\n  font-size: 10px;\n`;\n\nexport const LegendIcon = styled.div`\n  width: fit-content;\n  margin: auto;\n`;\n\nexport const LegendNumberContainer = styled.div`\n  display: flex;\n`;\n\nexport const LegendNumber = styled.div`\n  color: ${theme.color.smallTextBlack};\n  margin: auto;\n  font-family: ${theme.font.zoomFontFamTwo};\n  font-size: 10px;\n  line-height: 12px;\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ColorGradient = styled.div`\n  min-width: 268px;\n  height: 12px;\n  margin: 0 3px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\n  background-image: linear-gradient(\n    to right,\n    rgba(255, 255, 255, 0.5) 0%,\n    #5961bb 100%\n  );\n`;\n","export function formatNumber(number) {\n  return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n}\n","import React from 'react';\n\n/* styles */\nimport {\n  LegendItem,\n  LegendLabel,\n  LegendNumberContainer,\n  LegendNumber,\n} from 'components/GeoMap/components/Legends/Legend.styles';\nimport { ColorGradient } from 'components/GeoMap/components/Legends/LayerLegend/LayerLegend.styles';\n\n/* utils */\nimport { formatNumber } from 'utils/genericUtils';\n\nconst layerLegend = (legendName, index, min, max) => {\n  const third = Math.round((max - min) / 3);\n\n  const firstThird = min + third;\n  const secondThird = firstThird + third;\n\n  return (\n    legendName && (\n      <LegendItem key={`legend-${index}`}>\n        <LegendLabel>{legendName}</LegendLabel>\n        <ColorGradient />\n        <LegendNumberContainer>\n          <LegendNumber>{formatNumber(min)}</LegendNumber>\n          <LegendNumber>{formatNumber(firstThird)}</LegendNumber>\n          <LegendNumber>{formatNumber(secondThird)}</LegendNumber>\n          <LegendNumber>{formatNumber(max)}</LegendNumber>\n        </LegendNumberContainer>\n      </LegendItem>\n    )\n  );\n};\n\nexport default layerLegend;\n","import {\n  LegendLabel,\n  LegendItem,\n} from 'components/GeoMap/components/Legends/Legend.styles';\nimport React from 'react';\nimport LocationMarkerIcon from 'components/GeoMap/components/Markers/LocationMarker/LocationMarker.icon';\n\nconst locationLegend = (legendName, index) =>\n  legendName && (\n    <LegendItem key={`legend-${index}`}>\n      <LegendLabel>{legendName}</LegendLabel>\n      <div>\n        <LocationMarkerIcon\n          size={20}\n          extraStyle={{ position: 'relative', top: '25px', left: '15px' }}\n        />\n      </div>\n    </LegendItem>\n  );\n\nexport default locationLegend;\n","import styled from 'styled-components';\n\nexport const CircleContainer = styled.div`\n  position: relative;\n`;\n","import React from 'react';\n\nconst SvgCircleMarker = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    width={props.width}\n    height={props.height}\n    viewBox=\"0 0 47 48\"\n    style={{ margin: props.margin }}\n    {...props}\n    fill=\"rgba(255, 255, 255, 0.65)\"\n  >\n    <defs>\n      <path\n        id=\"md6ga\"\n        d=\"M256 106.5c0-10.217 8.283-18.5 18.5-18.5s18.5 8.283 18.5 18.5-8.283 18.5-18.5 18.5-18.5-8.283-18.5-18.5z\"\n      />\n      <mask id=\"md6gc\" width=\"2\" height=\"2\" x=\"-1\" y=\"-1\">\n        <path fill=\"#fff\" d=\"M256 88h37v37h-37z\" />\n        <use xlinkHref=\"#md6ga\" />\n      </mask>\n      <filter\n        id=\"md6gb\"\n        width=\"65\"\n        height=\"67\"\n        x=\"242\"\n        y=\"74\"\n        filterUnits=\"userSpaceOnUse\"\n      >\n        <feOffset dy=\"2\" in=\"SourceGraphic\" result=\"FeOffset1023Out\" />\n        <feGaussianBlur\n          in=\"FeOffset1023Out\"\n          result=\"FeGaussianBlur1024Out\"\n          stdDeviation=\"1.6 1.6\"\n        />\n      </filter>\n    </defs>\n    <g transform=\"translate(-251 -84)\">\n      <g filter=\"url(#md6gb)\">\n        <use\n          fill=\"none\"\n          strokeOpacity=\"0.5\"\n          strokeWidth=\"0\"\n          mask='url(\"#md6gc\")'\n          xlinkHref=\"#md6ga\"\n        />\n        <use fillOpacity=\"0.5\" xlinkHref=\"#md6ga\" />\n      </g>\n      <use fill=\"#fff\" fillOpacity=\"0.65\" xlinkHref=\"#md6ga\" />\n      <use\n        fill=\"#fff\"\n        fillOpacity=\"0\"\n        stroke=\"#87f013\"\n        strokeMiterlimit=\"50\"\n        strokeWidth=\"4\"\n        xlinkHref=\"#md6ga\"\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgCircleMarker;\n","import { Marker } from 'react-map-gl';\nimport React from 'react';\nimport { CircleContainer } from 'components/GeoMap/components/Markers/CircleMarker/CircleMarker.styles';\nimport SvgCircleMarker from 'assets/icons/CircleMarkerIcon';\n\n// so this basically returns the percentage of the\n// indicators value compared to the max and min values\n// of all indicators\nexport function getMeasure(value, maxVal, minVal) {\n  const difference = maxVal - minVal;\n  const percentage = difference !== 0 ? (100 * value) / difference : 100;\n  return percentage !== 0 ? percentage + 20 : percentage;\n}\n\n// so we need to adjust the position of the circle marker\n// cause it seems way of depending on the size of the circle\nfunction positionAdjustment(value, maxVal, minVal) {\n  return getMeasure(value, maxVal, minVal) / 2;\n}\n\nconst circleMarker = (indicator, index, setMarkerInfo) =>\n  indicator && (\n    <Marker\n      key={`marker-${index}`}\n      latitude={parseFloat(indicator.latitude)}\n      longitude={parseFloat(indicator.longitude)}\n    >\n      <CircleContainer\n        style={{\n          bottom: positionAdjustment(\n            indicator.value,\n            indicator.maxValue,\n            indicator.minValue,\n          ),\n          right: positionAdjustment(\n            indicator.value,\n            indicator.maxValue,\n            indicator.minValue,\n          ),\n        }}\n        onMouseEnter={() => setMarkerInfo(indicator)}\n        onMouseLeave={() => setMarkerInfo(null)}\n      >\n        <SvgCircleMarker\n          height={getMeasure(\n            indicator.value,\n            indicator.maxValue,\n            indicator.minValue,\n          )}\n          width={getMeasure(\n            indicator.value,\n            indicator.maxValue,\n            indicator.minValue,\n          )}\n        />\n      </CircleContainer>\n    </Marker>\n  );\n\nexport default circleMarker;\n","import styled from 'styled-components';\nimport { LegendLabel } from 'components/GeoMap/components/Legends/Legend.styles';\nimport theme from 'theme/Theme';\n\nexport const CircleLegendItem = styled.div`\n  display: flex;\n`;\n\nexport const CircleNumber = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: fit-content;\n  padding: 0 19px;\n  margin: auto auto 0 auto;\n  &:first-child {\n    padding-left: 0;\n    margin-left: 0;\n  }\n  &:last-child {\n    padding-right: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const CircleLegendLabel = styled(LegendLabel)`\n  padding-bottom: 0;\n`;\n\nexport const CircleLegendNum = styled.div`\n  margin: 0 auto;\n  color: ${theme.color.smallTextBlack};\n  font-family: ${theme.font.zoomFontFamTwo};\n  font-size: 10px;\n  line-height: 12px;\n`;\n","import React from 'react';\n/* icon */\nimport CircleMarkerIcon from 'assets/icons/CircleMarkerIcon';\n\n/* styles */\nimport { LegendItem } from 'components/GeoMap/components/Legends/Legend.styles';\nimport {\n  CircleNumber,\n  CircleLegendLabel,\n  CircleLegendItem,\n  CircleLegendNum,\n} from 'components/GeoMap/components/Legends/CircleLegend/CircleLegend.styles';\n\n/* utils */\nimport { formatNumber } from 'utils/genericUtils';\n\nconst circleLegend = (legendName, index, min, max) => {\n  const third = Math.round((max - min) / 3);\n\n  const firstThird = min + third;\n  const secondThird = firstThird + third;\n\n  return (\n    legendName && (\n      <LegendItem key={`legend-${index}`}>\n        <CircleLegendLabel>{legendName}</CircleLegendLabel>\n        <CircleLegendItem>\n          <CircleNumber>\n            <CircleMarkerIcon\n              height={19}\n              width={19}\n              margin=\"auto auto 3px auto\"\n            />\n            <CircleLegendNum>{formatNumber(min)}</CircleLegendNum>\n          </CircleNumber>\n          <CircleNumber>\n            <CircleMarkerIcon\n              height={24}\n              width={24}\n              margin=\"auto auto 2px auto\"\n            />\n            <CircleLegendNum>{formatNumber(firstThird)}</CircleLegendNum>\n          </CircleNumber>\n          <CircleNumber>\n            <CircleMarkerIcon\n              height={31}\n              width={31}\n              margin=\"auto auto 1px auto\"\n            />\n            <CircleLegendNum>{formatNumber(secondThird)}</CircleLegendNum>\n          </CircleNumber>\n          <CircleNumber>\n            <CircleMarkerIcon\n              height={37}\n              width={37}\n              margin=\"auto auto 0 auto\"\n            />\n            <CircleLegendNum>{formatNumber(max)}</CircleLegendNum>\n          </CircleNumber>\n        </CircleLegendItem>\n      </LegendItem>\n    )\n  );\n};\n\nexport default circleLegend;\n","import { fromJS } from 'immutable';\n\nexport const colorStops = [[0, '#FFFFFF'], [8, '#0900FF']];\n\n// For more information on data-driven styles, see https://www.mapbox.com/help/gl-dds-ref/\nexport const dataLayer = fromJS({\n  id: 'layer',\n  source: 'layer',\n  type: 'fill',\n  interactive: true,\n  paint: {\n    'fill-color': {\n      property: 'percentile',\n      stops: colorStops\n    },\n    'fill-opacity': 0.68\n  }\n});\n\n// This is used for borders\nexport const borderStyle = {\n  id: 'outline',\n  source: 'outline',\n  type: 'line',\n  paint: {\n    'line-width': 1.5,\n    'line-color': '#0080ef'\n  }\n};\n","import styled from 'styled-components';\nimport { Popup } from 'react-map-gl';\nimport theme from 'theme/Theme';\n\nexport const ToolTipContainer = styled(Popup)`\n  z-index: 1;\n  width: 320px;\n  & .mapboxgl-popup-content {\n    background-color: rgba(239, 239, 239, 0.67);\n    padding: 16px;\n  }\n\n  & .mapboxgl-popup-tip {\n    display: none;\n  }\n`;\n\nexport const ToolTipText = styled.div`\n  color: ${theme.color.zoomBlack};\n  font-family: ${theme.font.zoomFontFamTwo};\n  font-size: 12px;\n  line-height: 16px;\n  text-align: center;\n`;\n\nexport const ToolTipLabel = styled(ToolTipText)`\n  font-family: ${theme.font.zoomFontFamOne};\n  font-size: 21px;\n  margin-bottom: 12px;\n`;\n","import React from 'react';\nimport { getMeasure } from 'components/GeoMap/components/Markers/CircleMarker/CircleMarker';\nimport {\n  ToolTipContainer,\n  ToolTipLabel,\n  ToolTipText\n} from 'components/GeoMap/components/ToolTips/ToolTip.style';\n\n// So if the marker changes in size depending on its value we use\n// this function to get the offset top of the popup\n// for now mainly used for the circle marker\nfunction getOffsetTop(hoverMarkerInfo) {\n  let offset = -20;\n  if (\n    hoverMarkerInfo.maxValue !== undefined &&\n    hoverMarkerInfo.minValue !== undefined\n  ) {\n    const percentage = getMeasure(\n      hoverMarkerInfo.value,\n      hoverMarkerInfo.maxValue,\n      hoverMarkerInfo.minValue\n    );\n    offset = -percentage / 2;\n  }\n  return offset;\n}\n\n// This component is specific for the react-map-gl, thus there's no story books\n// or unit tests for it as a seperate component\nconst markerInfo = hoverMarkerInfo => {\n  if (hoverMarkerInfo) {\n    let countryName = hoverMarkerInfo.country;\n    countryName = countryName.charAt(0).toUpperCase() + countryName.slice(1);\n\n    return (\n      <ToolTipContainer\n        tipSize={5}\n        longitude={parseFloat(hoverMarkerInfo.longitude)}\n        latitude={parseFloat(hoverMarkerInfo.latitude)}\n        closeButton={false}\n        offsetTop={getOffsetTop(hoverMarkerInfo)}\n      >\n        <ToolTipLabel>{countryName}</ToolTipLabel>\n        <ToolTipText>\n          Kenya (/ˈkɛnjə/; locally [ˈkɛɲa] (About this sound listen)),\n          officially the Republic of Kenya (Swahili: Jamhuri ya Kenya), is a\n          country in Africa with …\n        </ToolTipText>\n      </ToolTipContainer>\n    );\n  }\n  return null;\n};\n\nexport default markerInfo;\n","import React from 'react';\nimport {\n  ToolTipContainer,\n  ToolTipText,\n  ToolTipLabel\n} from 'components/GeoMap/components/ToolTips/ToolTip.style';\n\n// This component is specific for the react-map-gl, thus there's no story books\n// or unit tests for it as a seperate component\nconst layerInfo = hoverLayerInfo => {\n  if (hoverLayerInfo) {\n    let countryName = hoverLayerInfo.properties.name;\n    countryName = countryName.charAt(0).toUpperCase() + countryName.slice(1);\n\n    return (\n      <ToolTipContainer\n        anchor=\"bottom\"\n        longitude={hoverLayerInfo.lngLat[0]}\n        latitude={hoverLayerInfo.lngLat[1]}\n        closeButton={false}\n        className=\"info-marker-tooltip\"\n      >\n        <ToolTipLabel>{countryName}</ToolTipLabel>\n        <ToolTipText>\n          Kenya (/ˈkɛnjə/; locally [ˈkɛɲa] (About this sound listen)),\n          officially the Republic of Kenya (Swahili: Jamhuri ya Kenya), is a\n          country in Africa with …\n        </ToolTipText>\n      </ToolTipContainer>\n    );\n  }\n\n  return null;\n};\n\nexport default layerInfo;\n","import styled from 'styled-components';\n\nimport theme from 'theme/Theme';\n\nexport const ComponentBase = styled.div`\n  display: flex;\n  background-color: rgba(255, 255, 255, 0.78);\n`;\n\nexport const YearLabel = styled.div`\n  font-size: 10px;\n  font-family: ${theme.font.zoomFontFamOne};\n  color: ${theme.color.smallTextBlack};\n  padding: 14px 0;\n  line-height: 12px;\n  flex-grow: 1;\n  text-align: center;\n`;\n\nexport const SelectedYearLabel = styled(YearLabel)`\n  background-color: ${theme.color.aidsFondsBlue};\n  color: ${theme.color.aidsFondsWhite};\n  &:first-child {\n    background-color: #000;4\n  }\n`;\n\nexport const StartControl = styled(YearLabel)`\n  background-color: ${theme.color.aidsFondsRed};\n  color: ${theme.color.aidsFondsWhite};\n  flex-grow: 0;\n\n  position: relative;\n  padding-left: 0.5%;\n  margin-right: 0.5%;\n\n  &:before {\n    border-left: 12px solid ${theme.color.aidsFondsRed};\n    border-top: 20px solid ${theme.color.aidsFondsBlue};\n    border-bottom: 20px solid ${theme.color.aidsFondsBlue};\n    content: '';\n    height: 0;\n    left: 100%;\n    position: absolute;\n    top: 0;\n    width: 0;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:active {\n    cursor: grabbing;\n    cursor: -moz-grabbing;\n    cursor: -webkit-grabbing;\n  }\n\n  user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  -webkit-touch-callout: none;\n  -o-user-select: none;\n  -moz-user-select: none;\n`;\n\nexport const EndControl = styled(YearLabel)`\n  background-color: ${theme.color.aidsFondsRed};\n  color: ${theme.color.aidsFondsWhite};\n  flex-grow: 0;\n\n  position: relative;\n\n  padding-right: 0.5%;\n  margin-left: 0.5%;\n\n  &:before {\n    border-right: 12px solid ${theme.color.aidsFondsRed};\n    border-top: 20px solid ${theme.color.aidsFondsBlue};\n    border-bottom: 20px solid ${theme.color.aidsFondsBlue};\n    content: '';\n    height: 0;\n    right: 100%;\n    position: absolute;\n    top: 0;\n    width: 0;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  -webkit-touch-callout: none;\n  -o-user-select: none;\n  -moz-user-select: none;\n\n  &:active {\n    cursor: grabbing;\n    cursor: -moz-grabbing;\n    cursor: -webkit-grabbing;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* utils */\nimport isEqual from 'lodash/isEqual';\n\n/* styles */\nimport {\n  ComponentBase,\n  YearLabel,\n  SelectedYearLabel,\n  StartControl,\n  EndControl,\n} from './CustomYearSelector.style';\n\nconst propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  selectedYears: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst defaultProps = {\n  min: 1990,\n  max: 2019,\n  selectedYears: ['2002', '2003', '2004', '2005', '2006', '2007', '2008'],\n};\n\nclass CustomYearSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      numArray: [],\n      mouseDown: 'none',\n      selectedYears: props.selectedYears,\n    };\n\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.renderYearLabels = this.renderYearLabels.bind(this);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleMoveOutside = this.handleMoveOutside.bind(this);\n  }\n\n  componentDidMount() {\n    // we will use this to detect if the 'mouse dragg' has exited the component\n    // we need to set the mouseDown to none then\n    document.addEventListener('mouseover', this.handleMoveOutside);\n    // we generate the year array here\n    const numArray = [];\n    for (let i = this.props.min; i < this.props.max + 1; i++) {\n      numArray.push(i.toString());\n    }\n    this.setState({ numArray });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!isEqual(this.props.selectedYears, prevProps.selectedYears)) {\n      this.setState({ selectedYears: this.props.selectedYears });\n    }\n\n    if (\n      this.state.mouseDown !== prevState.mouseDown &&\n      this.state.mouseDown === 'none'\n    ) {\n      this.props.selectYear([\n        parseInt(this.state.selectedYears[0], 10),\n        parseInt(\n          this.state.selectedYears[this.state.selectedYears.length - 1],\n          10,\n        ),\n      ]);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseover', this.handleMoveOutside);\n  }\n\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleMoveOutside(event) {\n    if (\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target) &&\n      this.state.mouseDown !== 'none'\n    ) {\n      this.setState({ mouseDown: 'none' });\n    }\n  }\n\n  handleMouseEnter(number) {\n    if (this.state.mouseDown !== 'none') {\n      this.setState(prevState => {\n        const selectedYears = [...prevState.selectedYears];\n\n        const numberInt = parseInt(number, 10);\n        const startInt = parseInt(selectedYears[0], 10);\n        const endInt = parseInt(selectedYears[selectedYears.length - 1], 10);\n\n        // so we basically use this weird if because mouse enter event doesn't triggger\n        // when you hover very quickly, so this basically disables your drag if you\n        // try to drag the control too quickly.\n        if (\n          (numberInt < startInt && startInt - 1 !== numberInt) ||\n          (numberInt > endInt && endInt + 1 !== numberInt) ||\n          (numberInt > startInt &&\n            numberInt < endInt &&\n            ((prevState.mouseDown === 'start' && startInt + 1 !== numberInt) ||\n              (prevState.mouseDown === 'end' && endInt - 1 !== numberInt)))\n        ) {\n          return { mouseDown: 'none' };\n        }\n\n        const yearInd = selectedYears.indexOf(number);\n        if (yearInd !== -1) {\n          if (selectedYears[1] === number) selectedYears.splice(yearInd - 1, 1);\n          else selectedYears.splice(yearInd + 1, 1);\n        } else if (numberInt < startInt) selectedYears.unshift(number);\n        else selectedYears.push(number);\n        return { selectedYears };\n      });\n    }\n  }\n\n  handleMouseDown(mouseDown) {\n    this.setState({ mouseDown });\n  }\n\n  handleMouseUp() {\n    this.setState({ mouseDown: 'none' });\n  }\n\n  renderYearLabels(number, index) {\n    let yearLabels = '';\n\n    if (number === this.state.selectedYears[0])\n      yearLabels = (\n        <StartControl\n          onMouseDown={() => this.handleMouseDown('start')}\n          onMouseUp={() => this.handleMouseUp()}\n          key={`year-${index}`}\n        >\n          {number}\n        </StartControl>\n      );\n    else if (\n      number === this.state.selectedYears[this.state.selectedYears.length - 1]\n    )\n      yearLabels = (\n        <EndControl\n          key={`year-${index}`}\n          onMouseDown={() => this.handleMouseDown('end')}\n          onMouseUp={() => this.handleMouseUp()}\n        >\n          {number}\n        </EndControl>\n      );\n    else if (this.state.selectedYears.indexOf(number) !== -1)\n      yearLabels = (\n        <SelectedYearLabel\n          onMouseEnter={() => this.handleMouseEnter(number)}\n          onMouseUp={() => this.handleMouseUp()}\n          key={`year-${index}`}\n        >\n          {number}\n        </SelectedYearLabel>\n      );\n    else\n      yearLabels = (\n        <YearLabel\n          onMouseEnter={() => this.handleMouseEnter(number)}\n          onMouseUp={() => this.handleMouseUp()}\n          key={`year-${index}`}\n        >\n          {number}\n        </YearLabel>\n      );\n\n    return yearLabels;\n  }\n\n  render() {\n    return (\n      <ComponentBase ref={this.setWrapperRef}>\n        {this.state.numArray.map(this.renderYearLabels)}\n      </ComponentBase>\n    );\n  }\n}\n\nCustomYearSelector.propTypes = propTypes;\nCustomYearSelector.defaultProps = defaultProps;\n\nexport default CustomYearSelector;\n","import React from 'react';\n\nconst SvgOnlyIconPlus = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    width=\"10\"\n    height=\"10\"\n    viewBox=\"0 0 10 10\"\n    style={{ margin: 'auto' }}\n    {...props}\n  >\n    <defs>\n      <path id=\"qgwfa\" d=\"M1237 74h-2v4h-4v2h4v4h2v-4h4v-2h-4z\" />\n    </defs>\n    <use fill=\"#4a4a4a\" xlinkHref=\"#qgwfa\" transform=\"translate(-1231 -74)\" />\n  </svg>\n);\n\nexport default SvgOnlyIconPlus;\n","import React from 'react';\n\nconst SvgOnlyIconMinus = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    width=\"10\"\n    height=\"2\"\n    viewBox=\"0 0 10 2\"\n    style={{ margin: 'auto' }}\n    {...props}\n  >\n    <defs>\n      <path id=\"ee0xa\" d=\"M1235 109h-4v2h10v-2h-4z\" />\n    </defs>\n    <use fill=\"#4a4a4a\" xlinkHref=\"#ee0xa\" transform=\"translate(-1231 -109)\" />\n  </svg>\n);\n\nexport default SvgOnlyIconMinus;\n","import React from 'react';\n\nconst SvgOnlyIconFullScreen = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    width=\"11\"\n    height=\"11\"\n    viewBox=\"0 0 11 11\"\n    style={{ margin: 'auto' }}\n    {...props}\n  >\n    <defs>\n      <path\n        id=\"67xwa\"\n        d=\"M1242 137v3.929h-1.571v-2.358h-2.358V137zm-1.571 7.071H1242V148h-3.929v-1.571h2.358zM1231 137h3.929v1.571h-2.358v2.358H1231zm1.571 9.429h2.358V148H1231v-3.929h1.571z\"\n      />\n    </defs>\n    <use fill=\"#4a4a4a\" xlinkHref=\"#67xwa\" transform=\"translate(-1231 -137)\" />\n  </svg>\n);\n\nexport default SvgOnlyIconFullScreen;\n","import styled from 'styled-components';\nimport theme from 'theme/Theme';\n\nexport const ComponentBase = styled.div`\n  padding: 3px 5px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  margin: 4px 0;\n  width: 26px;\n  height: 26px;\n  border-radius: 20px;\n\n  background-color: ${theme.color.aidsFondsWhite};\n  &:hover {\n    background-color: ${theme.color.zoomGreyThree};\n    cursor: pointer;\n  }\n`;\n\nexport const DisabledElement = styled.div`\n  user-select: none;\n  opacity: 0.5;\n  pointer-events: none;\n`;\n","/* base */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* icons */\nimport IconOnlyPlus from 'assets/icons/IconOnlyPlus';\nimport IconOnlyMinus from 'assets/icons/IconOnlyMinus';\nimport IconOnlyFullScreen from 'assets/icons/IconOnlyFullScreen';\n\n/* styles */\nimport {\n  ComponentBase,\n  ButtonContainer,\n  DisabledElement\n} from './MapControls.style';\n\nconst propTypes = {\n  onZoomIn: PropTypes.func,\n  onZoomOut: PropTypes.func,\n  onFullScreen: PropTypes.func\n};\nconst defaultProps = {\n  onZoomIn: null,\n  onZoomOut: null,\n  onFullScreen: null\n};\n\nconst MapControls = props => (\n  <ComponentBase>\n    <ButtonContainer onClick={props.onZoomIn} data-cy=\"home-zoom-out-button\">\n      <IconOnlyPlus />\n    </ButtonContainer>\n    <ButtonContainer onClick={props.onZoomOut} data-cy=\"home-zoom-in-button\">\n      <IconOnlyMinus />\n    </ButtonContainer>\n    <DisabledElement>\n      <ButtonContainer\n        onClick={props.onFullScreen}\n        data-cy=\"home-fullscreen-button\"\n      >\n        <IconOnlyFullScreen />\n      </ButtonContainer>\n    </DisabledElement>\n  </ComponentBase>\n);\n\nMapControls.propTypes = propTypes;\nMapControls.defaultProps = defaultProps;\n\nexport default MapControls;\n","import styled from 'styled-components';\n\nexport const MapContainer = styled.div`\n  height: calc(100vh - 40px);\n`;\n\nexport const NavContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 10px;\n  width: 100vw;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const LegendContainer = styled.div`\n  position: fixed;\n  width: fit-content;\n  left: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const YearContainer = styled.div`\n  position: fixed;\n  width: 98%;\n  bottom: 12px;\n  z-index: 2;\n  left: 1%;\n`;\n\nexport const NavControlContainer = styled.div`\n  height: 100px;\n`;\n\nexport const CountyInfo = styled.div`\n  width: 200px;\n  z-index: 100;\n  border-radius: 5px;\n  padding: 15px;\n  font-size: 14px;\n`;\n\nexport const ControlsContainer = styled.div`\n  position: fixed;\n  top: 54px;\n  right: 26px;\n  background-color: rgba(239, 239, 239, 0.72);\n  z-index: 1;\n`;\n","/* base */\nimport React, { Component } from 'react';\nimport MapGL from 'react-map-gl';\nimport isEqual from 'lodash/isEqual';\nimport { withRouter } from 'react-router';\n\n/* utils */\nimport { fromJS } from 'immutable';\nimport find from 'lodash/find';\nimport findIndex from 'lodash/findIndex';\nimport { generateLegends, generateMarkers } from './GeoMap.util';\n\n/* styles */\nimport { borderStyle, dataLayer } from './components/map-style';\n\n/* components */\nimport markerInfo from './components/ToolTips/MarkerInfo/MarkerInfo';\nimport layerInfo from './components/ToolTips/LayerInfo/LayerInfo';\nimport CustomYearSelector from 'components/CustomYearSelector/CustomYearSelector';\nimport MapControls from 'components/GeoMap/components/MapControls/MapControls';\n\nimport MAP_STYLE from 'components/GeoMap/data/map-style-basic-v8';\nimport {\n  LegendContainer,\n  MapContainer,\n  YearContainer,\n  ControlsContainer\n} from './GeoMap.style';\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoiemltbWVybWFuMjAxNCIsImEiOiJhNUhFM2YwIn0.sedQBdUN7PJ1AjknVVyqZw';\n\nexport class GeoMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.defaultMapStyle = {\n      ...MAP_STYLE,\n      sources: { ...MAP_STYLE.sources },\n      layers: MAP_STYLE.layers.slice()\n    };\n\n    this.state = {\n      mapStyle: fromJS(this.defaultMapStyle),\n      markerArray: [],\n      legends: [],\n      hoverLayerInfo: null,\n      viewport: {\n        latitude: 15,\n        longitude: 0,\n        bearing: 0,\n        pitch: 0,\n        zoom: 2\n      },\n      hoverMarkerInfo: null,\n      values: [12, 16],\n      fullScreen: false\n    };\n\n    this.setMarkerInfo = this.setMarkerInfo.bind(this);\n    this.handleZoomIn = this.handleZoomIn.bind(this);\n    this.handleZoomOut = this.handleZoomOut.bind(this);\n    this.handleFullscreen = this.handleFullscreen.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(this.props.indicatorData, prevProps.indicatorData)) {\n      this.updateMap(this.props.indicatorData);\n    }\n  }\n\n  componentWillUnmount() {\n    // so yeah because of annoying\n  }\n\n  updateMap(indicatorData) {\n    // So because the layers are a part of this map, and not just a component\n    // that we can put in the map(at least thats how we do it right now)\n    // we will generate the layers here, and differently than all other indicator\n    // markers\n    // Note: the layer will also use a different tooltip than the markers\n    // cause it kind of makes sense for some cases\n    const layers = find(indicatorData, ['type', 'layer']);\n    if (layers) {\n      let mapStyle = this.defaultMapStyle;\n      const borderData = layers.borderData ? layers.borderData : layers.data;\n\n      // here we need to push in the border line style seperately like this\n      // so that it would work and load properly with the layers\n      // this may not be the best approach, but its the one that actually works\n      // we also only push the borderStyle once.\n      if (!find(mapStyle.layers, ['id', 'outline'])) {\n        mapStyle.layers.push(borderStyle);\n      }\n\n      //then we continue working with the normal fromJS  variable\n      mapStyle = fromJS(mapStyle);\n      mapStyle = mapStyle\n        // Add geojson layer source to map\n        .setIn(\n          ['sources', 'layer'],\n          fromJS({ type: 'geojson', data: layers.data })\n        )\n        // Add point layer to map\n        .set('layers', mapStyle.get('layers').push(dataLayer))\n        // Add geojson border source to map\n        .setIn(\n          ['sources', 'outline'],\n          fromJS({ type: 'geojson', data: borderData })\n        );\n      this.setState({ mapStyle });\n    } else if (!isEqual(this.state.mapStyle, fromJS(this.defaultMapStyle))) {\n      //Here we set the map back to default when no layer data has been passed in\n      // And we need to remove the borderStyle cause it gets added there\n      // and while its there, the map will not set itself to default\n      let mapStylez = this.defaultMapStyle;\n      const ind = findIndex(mapStylez.layers, ['id', 'outline']);\n      mapStylez.layers.splice(ind, 1);\n      this.setState({ mapStyle: fromJS(mapStylez) });\n    }\n\n    // and all of the generic markers that can be just put in the map, like separate components\n    // will be generated like this, and will use the same marker tooltip\n    const markerArray = generateMarkers(indicatorData, this.setMarkerInfo);\n    // and in a similar way we generate legends\n    const legends = generateLegends(indicatorData);\n\n    this.setState({ markerArray, legends });\n  }\n\n  _updateViewport = viewport => this.setState({ viewport });\n\n  _setLayerInfo = event => {\n    let hoverLayerInfo = null;\n    const { features } = event;\n\n    const feature = features && features.find(f => f.layer.id === 'layer');\n    if (feature) {\n      hoverLayerInfo = {\n        lngLat: event.lngLat,\n        properties: feature.properties\n      };\n    }\n    this.setState({\n      hoverLayerInfo\n    });\n  };\n\n  _showLayerInfo() {\n    const { hoverLayerInfo, hoverMarkerInfo } = this.state;\n    if (!hoverMarkerInfo) return layerInfo(hoverLayerInfo);\n    return null;\n  }\n\n  setMarkerInfo(indicator) {\n    this.setState({\n      hoverMarkerInfo: indicator\n    });\n  }\n\n  _showMarkerInfo() {\n    const { hoverMarkerInfo } = this.state;\n    return markerInfo(hoverMarkerInfo);\n  }\n\n  _onCountryClick = event => {\n    const { features } = event;\n\n    const feature = features && features.find(f => f.layer.id === 'layer');\n    if (feature) this.props.history.push(`country/${feature.properties.iso2}`);\n  };\n\n  handleZoomIn = () => {\n    // cause when its 25 it gets white\n    /*if (this.state.zoom < 25)\n      this.setState(prevState => {\n        return { zoom: prevState.zoom + 0.2 };\n      });*/\n    this._updateViewport({ zoom: this.state.viewport.zoom + 1 });\n  };\n\n  handleZoomOut = () => {\n    /*if (this.state.zoom > 1)\n      this.setState(prevState => {\n        return { zoom: prevState.zoom - 0.2 };\n      });*/\n    this._updateViewport({ zoom: this.state.viewport.zoom - 1 });\n  };\n\n  handleFullscreen() {\n    this.setState(prevState => {\n      return { fullScreen: !prevState.handleFullscreen };\n    });\n  }\n\n  render() {\n    const { viewport, mapStyle, markerArray, legends, fullScreen } = this.state;\n    return (\n      /*todo: use mapbox api for fullscreen functionality instead of thirdparty*/\n\n      <MapContainer data-cy=\"geo-map-container\">\n        <ControlsContainer>\n          <MapControls\n            onZoomIn={this.handleZoomIn}\n            onZoomOut={this.handleZoomOut}\n            onFullScreen={this.handleFullscreen}\n          />\n        </ControlsContainer>\n\n        <YearContainer>\n          <CustomYearSelector\n            selectedYears={this.props.selectedYears}\n            selectYear={this.props.selectYear}\n          />\n        </YearContainer>\n\n        <MapGL\n          {...viewport}\n          scrollZoom={true}\n          width=\"100%\"\n          height=\"100%\"\n          mapStyle={mapStyle}\n          onViewportChange={this._updateViewport}\n          onHover={this._setLayerInfo}\n          onClick={this._onCountryClick}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          /*todo: refactor zooming functionality to facilitate both zooming by using the zoom controls and zooming by scrolling*/\n        >\n          {/*So this is the layer tooltip, and we seperate it from the\n              martker tooltip, cause its functionality as a tooltip is a bit different\n              and also because we implement the layers a bit more differently\n              than normal markers*/}\n          {this._showLayerInfo()}\n\n          {this._showMarkerInfo()}\n\n          {markerArray}\n\n          {/*contains zoom in/out and fullscreen toggle*/}\n\n          <LegendContainer>{legends}</LegendContainer>\n        </MapGL>\n      </MapContainer>\n    );\n  }\n}\n\nexport default withRouter(GeoMap);\n","import React from 'react';\nimport locationMarker from './components/Markers/LocationMarker/LocationMarker';\nimport layerLegend from './components/Legends/LayerLegend/LayerLegend';\nimport locationLegend from './components/Legends/LocationLegend/LocationLegend';\nimport circleMarker from './components/Markers/CircleMarker/CircleMarker';\nimport circleLegend from './components/Legends/CircleLegend/CircleLegend';\n\n// So here we will generate all of the markers that might be displayed on the map\n// location markers(like actual location markers)\n// country indicator markers(bublles that are bigger depending on the data)\n// and etc.\nexport function generateMarkers(indicatorData, setMarkerInfo) {\n  const markerArray = [];\n\n  indicatorData.forEach(item => {\n    switch (item.type) {\n      case 'location':\n        const locationMarkers = item.data.map((indicator, index) =>\n          locationMarker(indicator, index, setMarkerInfo),\n        );\n        markerArray.push(locationMarkers);\n        break;\n      case 'circle':\n        const circleMarkers = item.data.map((indicator, index) =>\n          circleMarker(indicator, index, setMarkerInfo),\n        );\n        markerArray.push(circleMarkers);\n        break;\n      default:\n        break;\n    }\n  });\n  return markerArray;\n}\n\n// So here we will generate all of the legends that might be displayed on the map\n// for the legend container\nexport function generateLegends(indicatorData) {\n  const legendArray = [];\n  indicatorData.forEach((item, index) => {\n    switch (item.type) {\n      case 'layer':\n        legendArray.push(\n          layerLegend(\n            item.legendName,\n            index,\n            item.data.minValue,\n            item.data.maxValue,\n          ),\n        );\n        break;\n      case 'location':\n        legendArray.push(locationLegend(item.legendName, index));\n        break;\n      case 'circle':\n        legendArray.push(\n          circleLegend(\n            item.legendName,\n            index,\n            item.data[0].minValue,\n            item.data[0].maxValue,\n          ),\n        );\n        break;\n      default:\n        break;\n    }\n  });\n  return legendArray;\n}\n","import styled from 'styled-components';\nimport { Box } from 'grommet';\n\nexport const ControlPanelContainer = styled.div`\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 9;\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  border-radius: 0;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  padding-top: 20px;\n  height: 100%;\n`;\n\nexport const PanelDuo = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const DropDownContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 5px;\n  margin-right: 5px;\n`;\n\nexport const ModuleContainer = styled(Box)``;\n","/* base */\nimport React from 'react';\nimport { createFragmentContainer, graphql } from 'react-relay';\nimport DataExplorePane from 'components/DataExplorePane/DataExplorePanel';\nimport PropTypes from 'prop-types';\n\n/* helpers */\nimport sortBy from 'lodash/sortBy';\nimport findIndex from 'lodash/findIndex';\n\nconst propTypes = {\n  dropDownData: PropTypes.shape({\n    allIndicators: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string,\n          }),\n        }),\n      ),\n    }),\n    allCountries: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string,\n            iso2: PropTypes.string,\n          }),\n        }),\n      ),\n    }),\n  }),\n};\n\nconst defaultProps = {\n  dropDownData: {},\n};\n\nclass ExplorePanelMediator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allIndNames: [],\n      allCountries: [],\n      allRegions: [],\n    };\n  }\n\n  onlyUnique(value, index, self) {\n    return findIndex(self, ['label', value.label]) === index;\n  }\n\n  componentDidMount() {\n    let allIndNames = this.props.dropDownData.allIndicators.edges.map(\n      indicator => {\n        return { label: indicator.node.name, value: indicator.node.name };\n      },\n    );\n\n    // We make the array only from unique indicators\n    // cause we receive several indicators with the same names\n    // most likely because of data points stuff\n    allIndNames = allIndNames.filter(this.onlyUnique);\n\n    allIndNames = sortBy(allIndNames, ['label']);\n\n    let allCountries = this.props.dropDownData.allCountries.edges.map(\n      indicator => {\n        return { label: indicator.node.name, value: indicator.node.iso2 };\n      },\n    );\n\n    allCountries = sortBy(allCountries, ['label']);\n\n    let allRegions = this.props.dropDownData.allRegions.edges.map(indicator => {\n      return { label: indicator.node.name, value: indicator.node.country };\n    });\n\n    allRegions = sortBy(allRegions, ['label']);\n\n    this.setState({\n      allIndNames,\n      allCountries,\n      allRegions,\n    });\n  }\n\n  render() {\n    const { dropDownData, ...otherProps } = this.props;\n\n    return (\n      <DataExplorePane\n        indNames={this.state.allIndNames}\n        countries={this.state.allCountries}\n        regions={this.state.allRegions}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nExplorePanelMediator.propTypes = propTypes;\nExplorePanelMediator.defaultProps = defaultProps;\n\nexport default createFragmentContainer(\n  ExplorePanelMediator,\n  graphql`\n    fragment ExplorePanelMediator_dropDownData on Query {\n      allIndicators {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n      allCountries {\n        edges {\n          node {\n            name\n            iso2\n          }\n        }\n      }\n      allRegions {\n        edges {\n          node {\n            name\n            country {\n              iso2\n            }\n          }\n        }\n      }\n    }\n  `,\n);\n","/* base */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n/* components */\nimport GeoMap from 'components/GeoMap/GeoMap';\nimport {\n  ModuleContainer,\n  ControlPanelContainer\n} from 'modules/home/HomeModule.styles';\nimport ExplorePanelMediator from 'mediators/ComponentMediators/ExplorePanelMediator/ExplorePanelMediator';\n// import BaseDialog from 'components/Dialog/BaseDialog/BaseDialog';\n\nconst propTypes = {\n  indicators: PropTypes.arrayOf(PropTypes.shape)\n};\n\nconst defaultProps = {\n  indicators: []\n};\n\nexport class HomeModule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpen: true,\n      sideBarOpen: false,\n      indicators: []\n    };\n\n    this.onClose = this.onClose.bind(this);\n    this.toggleSideBar = this.toggleSideBar.bind(this);\n  }\n\n  onClose = () => {\n    this.setState({ dialogOpen: false });\n  };\n\n  toggleSideBar = () => {\n    this.setState({ sideBarOpen: true });\n  };\n\n  render() {\n    const { indicators, ...otherProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <ModuleContainer>\n          {/*<BaseDialog open={this.state.dialogOpen} onClose={this.onClose} />*/}\n          <GeoMap\n            indicatorData={indicators}\n            selectedYears={this.props.yearPeriod}\n            selectYear={this.props.selectYear}\n          />\n          {this.props.dataPaneOpen && (\n            <ControlPanelContainer>\n              <ExplorePanelMediator {...otherProps} />\n            </ControlPanelContainer>\n          )}\n        </ModuleContainer>\n      </React.Fragment>\n    );\n  }\n}\nHomeModule.propTypes = propTypes;\nHomeModule.defaultProps = defaultProps;\n\nconst mapStateToProps = state => {\n  return {\n    dataPaneOpen: state.dataPaneOpen.open\n  };\n};\n\nexport default connect(mapStateToProps)(HomeModule);\n","export const initialState = {\n  indicators: [],\n  selectedInd1: undefined,\n  selectedInd2: undefined,\n  subIndicators1: [],\n  subIndicators2: [],\n  selectedCountryVal: [],\n  selectedSubInd1: [],\n  selectedSubInd2: [],\n  selectedRegionVal: [],\n};\n","import React, { Component } from 'react';\nimport { createRefetchContainer, graphql } from 'react-relay';\nimport isEqual from 'lodash/isEqual';\nimport {\n  formatCountryCenterData,\n  formatCountryLayerData,\n  formatCountryParam,\n  formatYearParam,\n  updatePercentiles\n} from 'mediators/ModuleMediators/HomeModuleMediator/HomeModuleMediator.utils';\nimport HomeModule from 'modules/home/HomeModule';\nimport PropTypes from 'prop-types';\nimport { initialState } from 'mediators/ModuleMediators/HomeModuleMediator/HomeModuleMediator.consts';\n\nconst propTypes = {\n  indicatorAggregations: PropTypes.shape({\n    indicators1: PropTypes.arrayOf(\n      PropTypes.shape({\n        indicatorName: PropTypes.string,\n        geolocationIso2: PropTypes.string,\n        geolocationTag: PropTypes.string,\n        date: PropTypes.string,\n        value: PropTypes.number\n      })\n    ),\n    indicators2: PropTypes.arrayOf(\n      PropTypes.shape({\n        indicatorName: PropTypes.string,\n        geolocationIso2: PropTypes.string,\n        geolocationTag: PropTypes.string,\n        date: PropTypes.string,\n        value: PropTypes.number\n      })\n    ),\n    subIndicators1: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string\n          })\n        })\n      )\n    }),\n    subIndicators2: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string\n          })\n        })\n      )\n    })\n  }),\n  dropDownData: PropTypes.shape({\n    allIndicators: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string\n          })\n        })\n      )\n    }),\n    allCountries: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string,\n            iso2: PropTypes.string\n          })\n        })\n      )\n    })\n  })\n};\n\nconst defaultProps = {\n  dropDownData: {},\n  indicatorAggregations: {}\n};\n\n// As discussed with Siem default year period selected should be\n// current year and 15 years before\nconst now = new Date();\nconst currentYear = now.getFullYear();\nconst yearBefore = currentYear - 15;\n\nclass HomeModuleMediator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      yearPeriod: formatYearParam([yearBefore, currentYear]),\n      ...initialState\n    };\n\n    this.selectInd1 = this.selectInd1.bind(this);\n    this.selectInd2 = this.selectInd2.bind(this);\n    this.selectSubInd1 = this.selectSubInd1.bind(this);\n    this.selectSubInd2 = this.selectSubInd2.bind(this);\n    this.selectYear = this.selectYear.bind(this);\n    this.refetch = this.refetch.bind(this);\n    this.selectCountry = this.selectCountry.bind(this);\n    this.selectRegion = this.selectRegion.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(\n        this.props.indicatorAggregations,\n        prevProps.indicatorAggregations\n      )\n    ) {\n      this.updateIndicators();\n    }\n\n    // so we refetch the subindicators, if one of the indicators has been changed\n    if (\n      this.state.selectedInd1 !== prevState.selectedInd1 ||\n      this.state.selectedInd2 !== prevState.selectedInd2\n    ) {\n      this.refetch();\n    }\n  }\n\n  updateIndicators() {\n    const subIndicators1 = this.props.indicatorAggregations.subIndicators1.edges.map(\n      indicator => {\n        return { label: indicator.node.name, value: indicator.node.name };\n      }\n    );\n\n    const subIndicators2 = this.props.indicatorAggregations.subIndicators2.edges.map(\n      indicator => {\n        return { label: indicator.node.name, value: indicator.node.name };\n      }\n    );\n\n    const countryLayerData = formatCountryLayerData(\n      this.props.indicatorAggregations.indicators1\n    );\n    const countryCircleData = formatCountryCenterData(\n      this.props.indicatorAggregations.indicators2\n    );\n\n    updatePercentiles(countryLayerData, f => f.properties.value);\n\n    const indicators = [];\n\n    if (countryLayerData.features.length > 0) {\n      indicators.push({\n        type: 'layer',\n        data: countryLayerData,\n        legendName: ` ${this.state.selectedInd1} `\n      });\n    }\n\n    if (countryCircleData.length > 0) {\n      indicators.push({\n        type: 'circle',\n        data: countryCircleData,\n        legendName: ` ${this.state.selectedInd2} `\n      });\n    }\n\n    this.setState({ indicators, subIndicators1, subIndicators2 });\n  }\n\n  refetch(\n    ind1 = this.state.selectedInd1,\n    ind2 = this.state.selectedInd2,\n    datePeriod = this.state.yearPeriod,\n    subInd1 = this.state.selectedSubInd1,\n    subInd2 = this.state.selectedSubInd2,\n    countriesCodes = this.state.selectedCountryVal,\n    regionCountriesCodes = this.state.selectedRegionVal\n  ) {\n    // We forming the param for countries from the selected countries of a region\n    // and single selected countries\n    const countriesISO2 = formatCountryParam(\n      countriesCodes,\n      regionCountriesCodes\n    );\n\n    const refetchVars = {\n      indicator1: [ind1],\n      indicator2: [ind2],\n      countriesISO2,\n      singleInd1: ind1 ? ind1 : 'null',\n      singleInd2: ind2 ? ind2 : 'null',\n      datePeriod,\n      subInd1: subInd1.length > 0 ? subInd1 : ['undefined'],\n      subInd2: subInd2.length > 0 ? subInd2 : ['undefined']\n    };\n\n    this.props.relay.refetch(refetchVars);\n  }\n\n  selectInd1(val) {\n    // So if a new batch of subindicators is retrieved\n    // we reset the selected subindicator\n    this.setState(\n      {\n        selectedInd1: val.value,\n        subIndicators1: [],\n        selectedSubInd1: []\n      },\n      this.refetch\n    );\n  }\n\n  selectInd2(val) {\n    // So if a new batch of subindicators is retrieved\n    // we reset the selected subindicator\n    this.setState(\n      {\n        selectedInd2: val.value,\n        subIndicators2: [],\n        selectedSubInd2: []\n      },\n      this.refetch\n    );\n  }\n\n  selectSubInd1(item, array = false) {\n    let selectedSubInd1 = [];\n\n    // so we set up this logic for select/deselect all logic\n    // if all is selected all of the options will be passed in\n    if (item !== 'reset') {\n      if (array) {\n        item.forEach(it => {\n          selectedSubInd1.push(it.value);\n        });\n      } else {\n        selectedSubInd1 = [...this.state.selectedSubInd1];\n        const subIndicatorIndex = selectedSubInd1.indexOf(item.value);\n        if (subIndicatorIndex === -1)\n          // so if it doesn't exist we add it\n          selectedSubInd1.push(item.value);\n        // if it does exist we remove it\n        else selectedSubInd1.splice(subIndicatorIndex, 1);\n      }\n    }\n\n    this.setState({ selectedSubInd1 }, this.refetch);\n  }\n\n  selectSubInd2(item, array = false) {\n    let selectedSubInd2 = [];\n\n    // so we set up this logic for select/deselect all logic\n    // if all is selected all of the options will be passed in\n    if (item !== 'reset') {\n      if (array) {\n        item.forEach(it => {\n          selectedSubInd2.push(it.value);\n        });\n      } else {\n        selectedSubInd2 = [...this.state.selectedSubInd2];\n        const subIndicatorIndex = selectedSubInd2.indexOf(item.value);\n        if (subIndicatorIndex === -1)\n          // so if it doesn't exist we add it\n          selectedSubInd2.push(item.value);\n        // if it does exist we remove it\n        else selectedSubInd2.splice(subIndicatorIndex, 1);\n      }\n    }\n\n    this.setState({ selectedSubInd2 }, this.refetch);\n  }\n\n  selectYear(val) {\n    this.setState({ yearPeriod: formatYearParam(val) }, this.refetch);\n  }\n\n  selectCountry(item, array = false) {\n    let selectedCountryVal = [];\n\n    // so we set up this logic for select/deselect all logic\n    // if all is selected all of the options will be passed in\n    if (item !== 'reset') {\n      if (array) {\n        item.forEach(it => {\n          selectedCountryVal.push(it.value);\n        });\n      } else {\n        selectedCountryVal = [...this.state.selectedCountryVal];\n        const countryIndex = selectedCountryVal.indexOf(item.value);\n        if (countryIndex === -1)\n          // so if it doesn't exist we add it\n          selectedCountryVal.push(item.value);\n        // if it does exist we remove it\n        else selectedCountryVal.splice(countryIndex, 1);\n      }\n    }\n\n    this.setState({ selectedCountryVal }, this.refetch);\n  }\n\n  selectRegion(item, array = false) {\n    let selectedRegionVal = [];\n\n    // so we set up this logic for select/deselect all logic\n    // if all is selected all of the options will be passed in\n    if (item !== 'reset') {\n      if (array) {\n        item.forEach(it => {\n          selectedRegionVal.push(it.value);\n        });\n      } else {\n        selectedRegionVal = [...this.state.selectedRegionVal];\n        const regionIndex = selectedRegionVal.indexOf(item.value);\n\n        if (regionIndex === -1)\n          // so if it doesn't exist we add it\n          selectedRegionVal.push(item.value);\n        // if it does exist we remove it\n        else selectedRegionVal.splice(regionIndex, 1);\n      }\n    }\n\n    this.setState({ selectedRegionVal }, this.refetch);\n  }\n\n  resetAll() {\n    this.setState(\n      {\n        ...initialState\n      },\n      this.refetch\n    );\n  }\n\n  render() {\n    return (\n      <HomeModule\n        indicators={this.state.indicators}\n        dropDownData={this.props.dropDownData}\n        selectInd1={this.selectInd1}\n        selectInd2={this.selectInd2}\n        selectYear={this.selectYear}\n        selectSubInd1={this.selectSubInd1}\n        selectSubInd2={this.selectSubInd2}\n        selectedInd1={this.state.selectedInd1}\n        selectedInd2={this.state.selectedInd2}\n        selectedSubInd1={this.state.selectedSubInd1}\n        selectedSubInd2={this.state.selectedSubInd2}\n        subIndicators1={this.state.subIndicators1}\n        subIndicators2={this.state.subIndicators2}\n        selectCountry={this.selectCountry}\n        selectedCountryVal={this.state.selectedCountryVal}\n        selectedRegionVal={this.state.selectedRegionVal}\n        selectRegion={this.selectRegion}\n        resetAll={this.resetAll}\n        defaultYear={this.state.defaultYear}\n        yearPeriod={this.state.yearPeriod}\n      />\n    );\n  }\n}\n\nHomeModuleMediator.propTypes = propTypes;\nHomeModuleMediator.defaultProps = defaultProps;\n\nexport default createRefetchContainer(\n  HomeModuleMediator,\n  graphql`\n    fragment HomeModuleMediator_indicatorAggregations on Query\n      @argumentDefinitions(\n        datePeriod: { type: \"[String]\", defaultValue: [\"null\"] }\n        indicator1: { type: \"[String]\", defaultValue: [\"null\"] }\n        indicator2: { type: \"[String]\", defaultValue: [\"null\"] }\n        subInd1: { type: \"[String]\", defaultValue: [\"null\"] }\n        subInd2: { type: \"[String]\", defaultValue: [\"null\"] }\n        countriesISO2: { type: \"[String]\", defaultValue: [\"null\"] }\n        singleInd1: { type: \"String\", defaultValue: \"null\" }\n        singleInd2: { type: \"String\", defaultValue: \"null\" }\n      ) {\n      indicators1: datapointsAggregation(\n        groupBy: [\n          \"indicatorName\"\n          \"geolocationTag\"\n          \"date\"\n          \"geolocationIso2\"\n          \"geolocationPolygons\"\n        ]\n        orderBy: [\"indicatorName\"]\n        aggregation: [\"Sum(value)\"]\n        date_In: $datePeriod\n        indicatorName_In: $indicator1\n        geolocationIso2_In: $countriesISO2\n        filterName_In: $subInd1\n      ) {\n        indicatorName\n        geolocationIso2\n        geolocationTag\n        geolocationPolygons\n        date\n        value\n      }\n      indicators2: datapointsAggregation(\n        groupBy: [\n          \"indicatorName\"\n          \"geolocationTag\"\n          \"date\"\n          \"geolocationIso2\"\n          \"geolocationCenterLongLat\"\n        ]\n        orderBy: [\"indicatorName\"]\n        aggregation: [\"Sum(value)\"]\n        date_In: $datePeriod\n        indicatorName_In: $indicator2\n        geolocationIso2_In: $countriesISO2\n        filterName_In: $subInd2\n      ) {\n        indicatorName\n        geolocationIso2\n        geolocationTag\n        geolocationCenterLongLat\n        date\n        value\n      }\n      subIndicators1: allFilters(indicator_Name: $singleInd1) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n      subIndicators2: allFilters(indicator_Name: $singleInd2) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n    }\n  `,\n  graphql`\n    query HomeModuleMediatorRefetchQuery(\n      $datePeriod: [String]!\n      $indicator1: [String]!\n      $indicator2: [String]!\n      $subInd1: [String]!\n      $subInd2: [String]!\n      $countriesISO2: [String]!\n      $singleInd1: String!\n      $singleInd2: String!\n    ) {\n      ...HomeModuleMediator_indicatorAggregations\n        @arguments(\n          datePeriod: $datePeriod\n          indicator1: $indicator1\n          indicator2: $indicator2\n          countriesISO2: $countriesISO2\n          singleInd1: $singleInd1\n          singleInd2: $singleInd2\n          subInd1: $subInd1\n          subInd2: $subInd2\n        )\n    }\n  `\n);\n"],"sourceRoot":""}